---
title: Generating and Registering the NSX Manager Superuser Principal Identity Certificate and Key
owner: TKGI
authenttype: pkstile
---

This topic describes how to generate and register the NSX-T Manager superuser principal identity certificate and key.
You do this in two situations:

- You are preparing to install  <%= vars.product_short %> (<%= vars.k8s_runtime_abbr %>) on vSphere with NSX-T.  For instructions, see [Generating the Certificate and Key for Installation](#certificates-nsx-pid-install).
- You need to rotate the NSX-T Manager certificate and key for an existing <%= vars.k8s_runtime_abbr %> installation.  For instructions, see [Rotate the Principal Identity Certificate and Key](#certificates-nsx-pid-rotate).

The NSX-T Manager superuser for <%= vars.k8s_runtime_abbr %> has the Enterprise Administrator role and permissions.
See [Role-Based Access Control](https://docs.vmware.com/en/VMware-NSX-T-Data-Center/2.5/administration/GUID-26C44DE8-1854-4B06-B6DA-A2FD426CDF44.html) in the VMware documentation for more information.

##<a id='prerequisites'></a>Installation Prerequisites

Review these prerequisites if you are installing <%= vars.k8s_runtime_abbr %> on vSphere with NSX-T for the first time.

If you are rotating the NSX-T Manager certificate for an existing <%= vars.k8s_runtime_abbr %> installation, see [Rotate the Principal Identity Certificate and Key](#certificates-nsx-pid-rotate), below.

<ul>
  <li>
    <a href="./vsphere-nsxt-index-prepare.html">Preparing to Install <%= vars.product_short %> on vSphere with NSX-T Data Center</a>
  </li>
  <li>
    <a href="./vsphere-nsxt-rpd-mpd.html">Hardware Requirements for <%= vars.product_short %> on vSphere with NSX-T</a>
  </li>
  <li>
    Depending on your NSX-T version:
    <ul><li><strong>NSX-T v3.0:</strong>
    <a href="./nsxt-3-0-install.html">Installing and Configuring NSX-T Data Center v3.0 for <%= vars.product_short %></a></li>
    <li><strong>NSX-T v2.5:</strong> See the v1.7 documentation:
      <ul><li><a href="https://docs.pivotal.io/pks/1-7/nsxt-2-5-installation-steps.html">Installing and Configuring NSX-T Data Center v2.5 for Enterprise PKS</a> and the sequence of topics it includes</li>
      <li><a href="https://docs.pivotal.io/pks/1-7/nsxt-prepare-mgmt-plane.html">Creating the <%= vars.product_short %> Management Plane</a></li>
      <li><a href="https://docs.pivotal.io/pks/1-7/nsxt-prepare-compute-plane.html">Create <%= vars.product_short %> Compute Plane</a></li></ul></li></ul>
  </li>
  <li>
    <a href="./vsphere-nsxt-om-deploy.html">Deploying Ops Manager with NSX-T for <%= vars.product_short %></a>
  </li>
  <li>
    <a href="./nsxt-3-0-install.html#nsxt30-mgmt-ssl">Generate and Register the NSX-T Management SSL Certificate and Private Key</a> in <em>Installing and Configuring NSX-T Data Center v3.0 for <%= vars.k8s_runtime_abbr %></em>
  </li>
  <li>
    <a href="./vsphere-nsxt-om-config.html">Configuring BOSH Director with NSX-T for <%= vars.product_short %></a>
  </li>
</ul>

##<a id='other-super-certificates'></a> How <%= vars.platform_name %> Accesses NSX-T Manager

<%= partial 'other-super-certificates' %>
###<a id='certificates-nsx-pid-about'></a> About the NSX-T Manager Super User Principal Identity

The <%= vars.control_plane %> accesses the NSX-T Manager through an Enterprise Administrator account.
This superuser account lets <%= vars.k8s_runtime_abbr %> use NSX-T to create, delete, and modify networking resources for Kubernetes cluster nodes.

When you configure <%= vars.product_short %> with NSX-T as the container networking interface, you must provide the certificate and private key for the NSX-T Manager Enterprise Administrator account in the **Networking** pane of the <%= vars.product_tile %> tile.

See the **NSX Manager Super User Principal Identity Certificate** field in the following screenshot:

  <img src="images/nsxt/nsx-pi-cert.png" alt="NSX Manager Principal Identity Certificate and Key" width="375">

  [View a larger version of this image.](images/nsxt/nsx-pi-cert.png)

For more information, see the [Networking](installing-nsx-t.html#networking) section of _Installing <%= vars.product_short %> on vSphere with NSX&#8209;T_.

##<a id='certificates-nsx-pid-install'></a> Generating the Certificate and Key for Installation

There are two options for generating the principal identity certificate and private key:

- [Option A](#certificate-super-user-script): Run a script on a Linux host with OpenSSL installed that generates the certificate and private key. 
For more information, see [Option A: Generate and Register the Certificate and Key Using Scripts](#certificate-super-user-script) below.  
- [Option B](#certificate-super-user-ui): Use the automatic **Generate RSA Certificate** option in the <%= vars.product_tile %> tile. 
For more information, see [Option B: Generate and Register the Certificate and Key Using the <%= vars.product_tile %> Tile](#certificate-super-user-ui) below.  

After you have generated the principal identity certificate and key, you must register both with the NSX-T Manager using an HTTPS POST operation on the NSX-T API. There is no user interface for this operation.

###<a id='certificate-super-user-script'></a> Option A: Generate and Register the Certificate and Key Using Scripts

This option uses Bash shell scripts to generate and register the NSX-T Manager superuser principal identity certificate and key. When you configure Tanzu Kubernetes Grid Integrated Edition for deployment, copy and paste the contents of `pks-nsx-t-superuser.crt` and `pks-nsx-t-superuser.key` to the **NSX Manager Super User Principal Identity Certificate** field in the **Networking** pane of the <%= vars.product_short %> tile.

<p class="note"><strong>Note</strong>: The Linux VM must have OpenSSL installed and have network access to the NSX-T Manager. For example, you can use the <%= vars.k8s_runtime_abbr %> client VM where you install the <%= vars.k8s_runtime_abbr %> CLI.</p>

####<a id='script-generate'></a> Step 1: Generate and Register the Certificate and Key

Provided below is the `create_certificate.sh` script that generates a certificate and private key, and then uploads the certificate to the NSX-T Manager. Complete the following steps to run this script:

1. Log in to a Linux VM in your <%= vars.product_short %> environment.
1. Create an empty file using `vi create_certificate.sh` or `nano create_certificate.sh`.
1. Modify the file you created to have the following script contents:

    ```bash
    #!/bin/bash
    #create_certificate.sh

    NSX_MANAGER="NSX-MANAGER-IP"
    NSX_USER="NSX-MANAGER-USERNAME"

    PI_NAME="pks-nsx-t-superuser"
    NSX_SUPERUSER_CERT_FILE="pks-nsx-t-superuser.crt"
    NSX_SUPERUSER_KEY_FILE="pks-nsx-t-superuser.key"

    stty -echo
    printf "Password: "
    read NSX_PASSWORD
    stty echo

    openssl req \
      -newkey rsa:2048 \
      -x509 \
      -nodes \
      -keyout "$NSX_SUPERUSER_KEY_FILE" \
      -new \
      -out "$NSX_SUPERUSER_CERT_FILE" \
      -subj /CN=pks-nsx-t-superuser \
      -extensions client_server_ssl \
      -config <(
        cat /etc/ssl/openssl.cnf \
        <(printf '[client_server_ssl]\nextendedKeyUsage = clientAuth\n')
      ) \
      -sha256 \
      -days 730

    cert_request=$(cat <<END
      {
        "display_name": "$PI_NAME",
        "pem_encoded": "$(awk '{printf "%s\\n", $0}' $NSX_SUPERUSER_CERT_FILE)"
      }
    END
    )

    curl -k -X POST \
        "https://${NSX_MANAGER}/api/v1/trust-management/certificates?action=import" \
        -u "$NSX_USER:$NSX_PASSWORD" \
        -H 'content-type: application/json' \
        -d "$cert_request"
    ```

    Where:  
    - `NSX-MANAGER-IP` is the IP address of the NSX Management Cluster VIP or NSX Management Load Balancer IP.
    - `NSX-MANAGER-USERNAME` is the Username for NSX Manager.
1. Save the `create_certificate.sh` file. 
1. Run the script using `bash create_certificate.sh`.
1. When prompted, enter the `NSX_MANAGER_PASSWORD` for the NSX-T user you specified in the script.
1. Verify results:
  - The certificate, `pks-nsx-t-superuser.crt`, and private key, `pks-nsx-t-superuser.key`, are generated in the directory where you ran the script.
  - The `CERTIFICATE-ID` value is returned to the console.
  - The certificate is uploaded to the NSX-T Manager node in the **System** > **Certificates** screen. 
1. Copy the UUID that is returned or from the NSX-T UI. You need it for the second script.

#### <a id='script-register'></a> Step 2: Create and Register the Principal Identity

Provided below is the `create_pi.sh` script that creates the principal identity and registers it with the NSX-T Manager. This script requires the `CERTIFICATE_ID` returned from the `create_certificate.sh` script.

<p class="note"><strong>Note</strong>: Perform these steps on the same Linux VM where you ran the <code>create_certificate.sh</code> script.</p>

1. Create an empty file for the script using `vi create_pi.sh` or `nano create_pi.sh`.
1. Copy the script contents into the `create_pi.sh` file you created.
1. Modify the file you created to have the following script contents:

    ```bash
    #!/bin/bash
    #create_pi.sh

    NSX_MANAGER="NSX-MANAGER-IP"
    NSX_USER="NSX-MANAGER-USERNAME"
    CERTIFICATE_ID='CERTIFICATE-ID'

    PI_NAME="pks-nsx-t-superuser"
    NSX_SUPERUSER_CERT_FILE="pks-nsx-t-superuser.crt"
    NSX_SUPERUSER_KEY_FILE="pks-nsx-t-superuser.key"
    NODE_ID=$(cat /proc/sys/kernel/random/uuid)

    stty -echo
    printf "Password: "
    read NSX_PASSWORD
    stty echo

    pi_request=$(cat <<END
        {
             "display_name": "$PI_NAME",
             "name": "$PI_NAME",
             "permission_group": "superusers",
             "certificate_id": "$CERTIFICATE_ID",
             "node_id": "$NODE_ID"
        }
    END
    )

    curl -k -X POST \
        "https://${NSX_MANAGER}/api/v1/trust-management/principal-identities" \
        -u "$NSX_USER:$NSX_PASSWORD" \
        -H 'content-type: application/json' \
        -d "$pi_request"

    curl -k -X GET \
        "https://${NSX_MANAGER}/api/v1/trust-management/principal-identities" \
        --cert $(pwd)/"$NSX_SUPERUSER_CERT_FILE" \
        --key $(pwd)/"$NSX_SUPERUSER_KEY_FILE"
    ```

    Where: 
    - `NSX-MANAGER-IP` is the IP address of the NSX-T Management Cluster VIP or NSX Management Load Balancer IP.
    - `NSX-MANAGER-USERNAME` is the Username for NSX-T Manager.
    - `CERTIFICATE-ID` is the response from the `create_certificate.sh` script.
1. Save the changes to the `create_pi.sh` script.
1. Run the script using `bash create_pi.sh`.
1. When prompted, enter the `NSX_MANAGER_PASSWORD` for the NSX-T user you specified in the script.
1. Verify results: Review the NSX-T Manager **System > Users > Role Assignments** screen. 
Confirm the principal identity `pks-nsx-t-superuser` is registered 
with the role `Enterprise Admin`.  
    ![NSX-T Manager System > Users > Role Assignments](images/nsxt/nsx-create_pi-result.png)  

    [View a larger version of this image.](images/nsxt/nsx-create_pi-result.png)

###<a id='certificate-super-user-ui'></a> Option B: Generate and Register the Certificate and Key Using the <%= vars.product_tile %> Tile

####<a id='generate-pi-cert-ui'></a> Step 1: Generate the Certificate and Key

To generate the certificate and key automatically in the **Networking** pane in the <%= vars.product_tile %> tile, follow the steps below:

1. Navigate to the **Networking** pane in the <%= vars.product_tile %> tile. For more information, see [Networking](installing-nsx-t.html#networking) in _Installing <%= vars.product_short %> on vSphere with NSX-T Integration_.
1. Click **Generate RSA Certificate** and provide a wildcard domain. For example, `*.nsx.tkgi.vmware.local`.

####<a id='copy-pi-cert'></a> Step 2: Copy the Certificate and Key to the Linux VM

To copy the certificate and key you generated to a Linux VM, follow the steps below:
<p class="note"><strong>Note</strong>: The Linux VM must have OpenSSL installed and have network access to the NSX-T Manager. For example, you can use the <%= vars.k8s_runtime_abbr %> client VM where you install the <%= vars.k8s_runtime_abbr %> CLI.</p>

1. On the Linux VM you want to use to register the certificate, create a file named `pks-nsx-t-superuser.crt`. Copy the generated certificate into the file.
1. On the Linux VM you want to use to register the key, create a file named `pks-nsx-t-superuser.key`. Copy the generated private key into the file.
1. Save both files.

####<a id='variables'></a> Step 3: Export Environment Variables

On the Linux VM where you created the certificate and key files, export the environment variables below. Change the `NSX_MANAGER_IP`, `NSX_MANAGER_USERNAME`, and `NSX_MANAGER_PASSWORD` values to match your environment. Use the NSX-T Management Cluster VIP or load balancer for the `NSX_MANAGER_IP`.

```
export NSX_MANAGER="NSX_MANAGER_IP"
export NSX_USER="NSX_MANAGER_USERNAME"
export NSX_PASSWORD='NSX_MANAGER_PASSWORD'
export PI_NAME="pks-nsx-t-superuser"
export NSX_SUPERUSER_CERT_FILE="pks-nsx-t-superuser.crt"
export NSX_SUPERUSER_KEY_FILE="pks-nsx-t-superuser.key"
export NODE_ID=$(cat /proc/sys/kernel/random/uuid)
```

####<a id='register-pi-certificate'></a> Step 4: Register the Certificate

1. On the same Linux VM, run the following commands to register the certificate with NSX-T Manager:

    <pre class="terminal">
    $ cert_request=$(cat <span><<</span>END
      {
        "display_name": "$PI_NAME",
        "pem_encoded": "$(awk '{printf "%s\\n", $0}' $NSX_SUPERUSER_CERT_FILE)"
      }
    END
    )
    </pre>

    <pre class="terminal">
    $ curl -k -X POST \
    "https://${NSX_MANAGER}/api/v1/trust-management/certificates?action=import" \
    -u "$NSX_USER:$NSX_PASSWORD" \
    -H 'content-type: application/json' \
    -d "$cert_request"
    </pre>

1. Verify that the response includes the `CERTIFICATE_ID` value. You use this value in the following step.

####<a id='register-pi'></a> Step 5: Register the Principal Identity

1. On the same Linux VM, export the `CERTIFICATE_ID` environment variable, where the value is the response from the previous step:

    ```
    export CERTIFICATE_ID="CERTIFICATE_ID"
    ```

1. Register the principal identity with NSX-T Manager by running the following commands:

    <pre class="terminal">
    $ pi_request=$(cat <span><<</span>END
      {
        "display_name": "$PI_NAME",
        "name": "$PI_NAME",
        "permission_group": "superusers",
        "certificate_id": "$CERTIFICATE_ID",
        "node_id": "$NODE_ID"
      }
    END
    )
    </pre>

    <pre class="terminal">
    $ curl -k -X POST \
      "https://${NSX_MANAGER}/api/v1/trust-management/principal-identities" \
      -u "$NSX_USER:$NSX_PASSWORD" \
      -H 'content-type: application/json' \
      -d "$pi_request"
    </pre>

####<a id='verify-pi-certificate'></a> Step 6: Verify the Certificate and Key

To verify that the certificate and key can be used with NSX-T, run the following command:

<pre class="terminal">
$ curl -k -X GET \
"https://${NSX_MANAGER}/api/v1/trust-management/principal-identities" \
--cert $(pwd)/"$NSX_SUPERUSER_CERT_FILE" \
--key $(pwd)/"$NSX_SUPERUSER_KEY_FILE"
</pre>

##<a id='certificates-nsx-pid-rotate'></a> Rotate the Principal Identity Certificate and Key

To rotate the NSX-T Principal Identity super user certificate, see 
[How to renew the nsx-t-superuser-certificate used by Principal Identity user]
(https://kb.vmware.com/s/article/80355) in the VMware Knowledge Base.

##<a id='next'></a> Next Installation Step

If you have completed this procedure as part of installing <%= vars.k8s_runtime_abbr %> for the first time,
proceed to <a href="./installing-nsx-t.html">Installing <%= vars.k8s_runtime_abbr %> on vSphere with NSX-T</a>.
