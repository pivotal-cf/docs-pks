---
title: Monitoring TKGI and TKGI-Provisioned Clusters on Linux
owner: TKGI
---

This topic lists <%= vars.product_full %> (<%= vars.k8s_runtime_abbr %>)
components and integrations you can use to capture logs and metrics about
<%= vars.k8s_runtime_abbr %> and <%= vars.k8s_runtime_abbr %>-provisioned
cluster VMs on Linux.

## <a id='overview'></a>Overview

To monitor <%= vars.k8s_runtime_abbr %> and
<%= vars.k8s_runtime_abbr %>-provisioned cluster VMs, you can enable one or
more of the following components and integrations:

<table class="nice">
  <col width="35%">
  <col width="65">
  <tr>
    <th>Name</th>
    <th>Link</th>
  </tr>
  <tr>
    <td>Syslog</td>
    <td>See <a href="#syslog">Syslog</a> below.</td>
  </tr>
  <tr>
    <td>Telegraf (metrics)</td>
    <td>See <a href="#telegraf">Telegraf</a> below.</td>
  </tr>
  <tr>
    <td>Healthwatch</td>
    <td>See <a href="#healthwatch">Healthwatch</a> below.</td>
  </tr>
  <tr>
    <td>VMware vRealize Log Insight</td>
    <td>See <a href="#vrealize">vRealize Log Insight (vSphere Only)</a> below.</td>
  </tr>
</table>

Syslog, Telegraf, and VMware vRealize Log Insight integrations are enabled in the 
**<%= vars.product_tile %>** tile > **Host Monitoring** section. 
Healthwatch is deployed to Ops Manager as the Healthwatch Exporter for <%= vars.k8s_runtime_abbr %> tile.   

These components and
integrations are visible only to <%= vars.k8s_runtime_abbr %> admins.
They are not visible to cluster users, such as developers.

For information about monitoring Kubernetes workloads on Linux,
see [Monitoring Workers and Workloads](in-cluster-monitoring.html).

For information about logging and monitoring Kubernetes clusters, workers and workloads on Windows,
see:  

* [Monitoring Windows Worker Clusters and Workers](windows-monitoring.html)
* [Logging Windows Worker Clusters and Workers](windows-logging.html)

## <a id='logs'></a>Logs&#58; Syslog and vRLI

You can configure Syslog or vRealize Log Insight (vSphere only) to publish logs from the <%= vars.k8s_runtime_abbr %> control plane
and <%= vars.k8s_runtime_abbr %>-provisioned cluster VMs.

You might need to inspect Syslog or vRealize Log Insight (vRLI) logs when troubleshooting or
auditing your <%= vars.k8s_runtime_abbr %> environment.
For information about key
<%= vars.k8s_runtime_abbr %> events and the log entries they generate, see
[Auditing <%= vars.product_short %> Logs](monitor-audit-logs.html).

### <a id='syslog'></a>Syslog

Syslog sends log messages from all BOSH-deployed VMs in a
<%= vars.k8s_runtime_abbr %> environment to a syslog endpoint.
To configure Syslog,
see [Syslog](installing-vsphere.html#host-syslog) in the
_Installing_ topic for your IaaS.

If you do not use Syslog, you can
retrieve logs from BOSH-deployed VMs by downloading them as described in
[Downloading Logs from VMs](download-logs.html).
However, retrieving these logs through Syslog is recommended.

### <a id='vrealize'></a>vRealize Log Insight (vSphere Only)

The vRealize Log Insight (vRLI) integration for <%= vars.k8s_runtime_abbr %>
pulls logs from all BOSH jobs and
containers running in the cluster, including node logs from core Kubernetes and
BOSH processes, Kubernetes event logs, and pod `stdout` and `stderr`.

To configure the vRLI integration, see
[VMware vRealize Log Insight Integration](installing-vsphere.html#vrealize-logs)
in the _Installing_ topic for vSphere with Flannel or vSphere with NSX-T.

For information about vRLI,
see [vRealize Log Insight](https://www.vmware.com/products/vrealize-log-insight.html).

## <a id='telegraf'></a>Metrics&#58; Telegraf

Telegraf sends metrics from TKGI API, control plane node, and worker
node VMs to a monitoring service, such as Wavefront or Datadog.

In the **<%= vars.product_tile %>** tile > **Host Monitoring**, you can
configure Telegraf to collect metrics from one or more the following sources:

<table class="nice">
  <col width="30%">
  <col width="70%">
  <tr>
    <th>Source</th>
    <th>Includes metrics fromâ€¦</th>
  </tr>
  <tr>
    <td>
      <strong>TKGI API</strong>
    </td>
    <td>
      <ul>
        <li>Node Exporter (Prometheus)</li>
      </ul>
    </td>
  </tr>
  <tr>
    <td>
      <strong>Control Plane nodes</strong><br>
      (not visible to cluster users)
    </td>
    <td>
      <p>One or more of the following:</p>
      <ul>
        <li>Node Exporter (Prometheus)</li>
        <li>Kubernetes API server</li>
        <li>Kubernetes controller manager</li>
        <li>etcd</li>
      </ul>
    </td>
  </tr>
  <tr>
    <td>
      <strong>Worker nodes</strong>
    </td>
    <td>
      <p>One or more of the following:</p>
      <ul>
        <li>Node Exporter (Prometheus)</li>
        <li>kubelet</li>
      </ul>
    </td>
  </tr>
</table>

To configure Telegraf, see
[Configuring Telegraf in <%= vars.k8s_runtime_abbr %>](monitor-etcd.html).

For more information about Node Exporter,
see [About Node Exporter](#node-exporter) below.  

### <a name="node-exporter"></a>About Node Exporter

Node Exporter exports hardware and operating system metrics in Prometheus format.

In the **Host Monitoring** pane of the <%= vars.product_tile %> tile, you can
enable the Node Exporter BOSH job separately on control plane nodes, worker nodes,
and the <%= vars.control_plane %> VM.

Node Exporter exposes metrics on <em>localhost</em> only. For a list of
Node Exporter metrics, see the
[Node Exporter](https://github.com/prometheus/node_exporter#enabled-by-default)
GitHub repository.

## <a id='healthwatch'></a>Healthwatch

You can use the [Healthwatch](https://docs.pivotal.io/healthwatch/index.html) Healthwatch Exporter for <%= vars.k8s_runtime_abbr %> tile
to monitor the health of the <%= vars.k8s_runtime_abbr %> Control Plane
and your Linux and Windows cluster control plane nodes.

Healthwatch enables you to monitor the functionality of your <%= vars.k8s_runtime_abbr %> environment
and can be configured to expose metrics to a service or database external to your Ops Manager foundation.
For more information, see [Overview of the Healthwatch Exporter for TKGI Tile](https://docs.pivotal.io/healthwatch/index.html#exporter-tkgi).

To configure cluster discovery in Healthwatch, see
[Configuring TKGI Cluster Discovery](https://docs.pivotal.io/healthwatch/configuring/optional-config/configuring-cluster-discovery.html)
in the Healthwatch documentation.
