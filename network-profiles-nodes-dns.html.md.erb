---
title: Specify Nodes DNS Servers
owner: TKGI
---

This topic describes how to define network profiles for Kubernetes clusters provisioned with <%= vars.product_full %> on vSphere with NSX-T.

## <a id='dns'></a> DNS Configuration for Kubernetes Clusters

You can specify multiple DNS entries in a Network Profile to override the **Nodes DNS** parameter configured in the <%= vars.k8s_runtime_abbr %> tile. In a multi-tenant environment, for example, each tenant can have a different set of DNS servers to do a DNS lookup.

Using a network profile, you can define one or more DNS servers for use with Kubernetes clusters. Elements in the `nodes_dns` field of a network profile override the DNS server that is configured in the Networking section of the <%= vars.product_tile %> tile. For more information, see [Networking](installing-nsx-t.html#networking).

The `nodes_dns` field accepts an array with up to three elements. Each element must be a valid IP address of a DNS server. If you are deploying <%= vars.product_short %> in a multi-tenant environment with multiple Tier-0 routers and a single <%= vars.k8s_runtime_abbr %> foundation (installation) shared across all the tenants, or if you have shared services that can be accessed by all Kubernetes clusters deployed across multiple Tier-0 routers, the first DNS server entered should be a shared DNS server. Subsequent DNS entries in the Network Profile can be specific to the tenant.

The following example network profile, `nodes-dns.json`, demonstrates the configuration of the `nodes_dns` parameter with 3 DNS servers. Each entry is the IP address of a DNS server, with the first entry being a public DNS server.

```
nodes-dns.json
{
	"description": "Overwrite Nodes DNS Entry",
	"name": "nodes_dns_multiple",
	"parameters": {
		"nodes_dns": [
			"8.8.8.8", "192.168.115.1", "192.168.116.1"
		]
	}
}
```

You can modify the Node DNS configuration on an existing cluster.  
