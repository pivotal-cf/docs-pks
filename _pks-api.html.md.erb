Perform the following steps:

1. Click **PKS API**.

1. Under **Certificate to secure the PKS API**, provide a certificate and private key pair.
  <br>
  ![PKS API pane configuration](images/pks-api.png)
  <br>
  The certificate that you supply should cover the domain that routes to the <%= vars.control_plane %> VM with TLS termination on the ingress.
  <br><br>
  You can enter your own certificate and private key pair, or have Ops Manager generate one for you.
<br>
  To generate a certificate using Ops Manager:
    1. Click **Generate RSA Certificate** for a new install or **Change** to update a previously-generated certificate.
    1. Enter the domain for your API hostname. This must match the domain you configured under **PKS API** > **API Hostname (FQDN)** in the Enterprise PKS tile. It can be a standard FQDN or a wildcard domain.
    1. Click **Generate**.<br>
    ![PKS API certificate generation](images/pks-api-cert-gen.png)
    <% if current_page.data.iaas == "GCP" %>
    <p class="note"><strong>Note</strong>: If you deployed a global HTTP load balancer for Ops Manager without a certificate,
      you can configure the load balancer to use this newly-generated certificate.
      To configure your Ops Manager load balancer front end certificate,
      see <a href="https://docs.pivotal.io/platform/ops-manager/gcp/prepare-env-manual.html#config-frontend">Configure Front End</a> in
       <em>Preparing to Deploy Ops Manager on GCP Manually</em>.</p>
    <% else %>
    <% end %>
1. Under **API Hostname (FQDN)**, enter the FQDN that you registered to point to the PKS API load balancer, such as `api.pks.example.com`.
To retrieve the public IP address or FQDN of the PKS API load balancer,
<% if current_page.data.iaas == "AWS" or current_page.data.iaas == "Azure" %>
see the `terraform.tfstate` file.
<% else %>
log in to your IaaS console.
<% end %>
1. Under **Worker VM Max in Flight**, enter the maximum number of non-canary worker instances to create or resize in parallel within an availability zone.
	<br><br>
	This field sets the `max_in_flight` variable value. When you create or resize a cluster, 
  the `max_in_flight` value limits the number of component instances that can be created or started simultaneously. 
  By default, the `max_in_flight` value is set to `4`, which means that up to four component instances are simultaneously created or started at a time.
1. Click **Save**.