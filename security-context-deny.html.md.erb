---
title: Enabling the SecurityContextDeny Admission Plugin
owner: TKGI
---

<%= vars.vmware_attribution %>

This topic describes how to enable the SecurityContextDeny admission controller for <%= vars.product_full %> (<%= vars.k8s_runtime_abbr %>) clusters.  

##<a id='about-sec-context-deny'></a> About the SecurityContextDeny Admission Plugin

The SecurityContextDeny admission controller plugin will deny any pod that attempts to set certain escalating Security Context fields. 

In Kubernetes, a [security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/) defines privilege and access control settings for a pod or container. The securityContext field is a PodSecurityContext object. For more information, see [Set the security context for a Pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod) in the Kubernetes documentation.

##<a id='when-sec-context-deny'></a> When to Enable the SecurityContextDeny Admission Plugin

The SecurityContextDeny admission plugin should be enabled if a cluster does not use pod security policies (PSPs) to restrict the set of values a security context can take. See [Enabling and Using Pod Security Policies](./pod-security-policy.html) for more information.

PSPs are the preferred method for providing a more secure Kubernetes environment. However, PSPs have administrative overhead. Enabling the SecurityContextDeny is a stopgap method of providing a more secure Kubernetes environment when it is not feasible to use PSPs. If you plan to use PSPs in the future, consider enabling the SecurityContextDeny admission plugin as an interim security measure.

##<a id='impact-sec-context-deny'></a> Impact of Enabling the SecurityContextDeny Admission Plugin

This section describes the impact of enabling the SecurityContextDeny admission control plugin for new and existing cluster plans.

**New Cluster.** If you enable the SecurityContextDeny admission plugin in a plan and deploy a new Kubernetes cluster based on that plan, cluster users will not be able to create securityContext capabilities on that cluster. 

**Existing Cluster.** If you enable the SecurityContextDeny admission plugin in a plan and update a Kubernetes cluster, cluster users will no longer be able to create securityContext capabilities on that cluster.
This assumes you enable **Upgrade all clusters errand** or update your cluster individually through the <%= vars.k8s_runtime_abbr %> Command Line Interface (<%= vars.k8s_runtime_abbr %> CLI).

##<a id='enable-sec-context-deny'></a> Enabling the SecurityContextDeny Admission Plugin

To enable the SecurityContextDeny admission plugin:

1. In the <%= vars.k8s_runtime_abbr %> tile, select the desired Plan, such as Plan 1.
1. At the bottom of the configuration panel, select the **SecurityContextDeny** option.  
	<img src="images/psp-seccontextdeny.png" alt="Enabling SecurityContextDeny" width="325">
1. Click **Save**.
1. On the Installation Dashboard, click **Review Pending Changes**.
1. For <%= vars.product_short %>, verify that **Upgrade all clusters errand** is enabled.
1. Click **Apply Changes** to deploy the cluster with the admission plugin enabled.

Alternatively, instead of enabling **Upgrade all clusters errand**,
you can upgrade individual Kubernetes clusters through the <%= vars.k8s_runtime_abbr %> Command Line Interface (<%= vars.k8s_runtime_abbr %> CLI).
For instructions on upgrading individual Kubernetes clusters, see [Upgrading Clusters](upgrade-clusters.html).
