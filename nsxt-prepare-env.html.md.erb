---
title: Network Planning for Installing Tanzu Kubernetes Grid Integrated Edition with NSX-T
owner: TKGI
---

Before you install <%= vars.product_full %> on vSphere with NSX-T integration, you must plan the environment as described in this topic.

##<a id='prerequisites'></a>Prerequisites

Familiarize yourself with the following VMware documentation:

* [vSphere, vCenter, vSAN, and ESXi documentation](https://docs.vmware.com/en/VMware-vSphere/index.html)
* [NSX-T Data Center documentation](https://docs.vmware.com/en/VMware-NSX-T-Data-Center/index.html)
* [NSX Container Plugin (NCP) documentation](https://docs.vmware.com/en/VMware-NSX-T-Data-Center/2.4/com.vmware.nsxt.ncp_kubernetes.doc/GUID-FB641321-319D-41DC-9D16-37D6BA0BC0DE.html)

Familiarize yourself with the following related documentation:

* [Ops Manager documentation](https://docs.pivotal.io/ops-manager/vsphere/deploy.html)
* [BOSH documentation](https://bosh.io/docs/bosh-components/)
* [Kubernetes documentation](https://kubernetes.io/docs/home/)
* [Docker documentation](https://docs.docker.com/)

Review the following <%= vars.product_short %> documentation:

* [vSphere with NSX-T Version Requirements](vsphere-nsxt-requirements.html)
* [Hardware Requirements for <%= vars.product_short %> on vSphere with NSX-T](vsphere-nsxt-rpd-mpd.html)
* [VMware Ports and Protocols](https://ports.vmware.com/home/vSphere+NSX-Data-Center-for-vSphere+NSX-T-Data-Center)
on the VMware site.
* [Network Objects Created by NSX-T for <%= vars.product_short %>](./vsphere-nsxt-cluster-objects.html)

##<a id='components'></a>Understand Component Interactions

<%= vars.product_short %> on vSphere with NSX-T requires the following component interactions:

* vCenter, NSX-T Manager Nodes, NSX-T Edge Nodes, and ESXi hosts must be able to communicate with each other.
* The BOSH Director VM must be able to communicate with vCenter and the NSX-T Management Cluster.
* The BOSH Director VM must be able to communicate with all nodes in all Kubernetes clusters.
* Each <%= vars.product_short %>-provisioned Kubernetes cluster deploys the NSX-T Node Agent and the Kube Proxy that run as BOSH-managed processes on each worker node.
* NCP runs as a BOSH-managed process on the Kubernetes control plane node. In a multi-control plane node deployment, the NCP process runs on all control plane nodes, but is active only on one control plane node. If the NCP process on an active control plane node is unresponsive, BOSH activates another NCP process.

##<a id='plan-topology'></a>Plan Deployment Topology

Review the [Deployment Topologies](nsxt-topologies.html) for <%= vars.product_short %> on vSphere with NSX-T. The most common deployment topology is the [NAT topology](./nsxt-topologies.html#topology-nat). Decide which deployment topology you will implement, and plan accordingly. 

##<a id='plan-cidrs'></a>Plan Network CIDRs

Before you install <%= vars.product_short %> on vSphere with NSX-T, you should plan for the CIDRs and IP blocks that you are using in your deployment.

Plan for the following network CIDRs in the IPv4 address space according to the instructions in the VMware [NSX-T documentation](https://docs.vmware.com/en/VMware-NSX-T/index.html).

* **VTEP CIDRs**: One or more of these networks host your GENEVE Tunnel Endpoints on your NSX Transport Nodes. Size the networks to support all of your expected Host and Edge Transport Nodes. For example, a CIDR of `192.168.1.0/24` provides 254 usable IPs.

* **<%= vars.k8s_runtime_abbr %> MANAGEMENT CIDR**: This small network is used to access <%= vars.product_short %> management components such as Ops Manager, BOSH Director, and <%= vars.product_short %> VMs as well as the Harbor Registry VM if deployed. For example, a CIDR of `10.172.1.0/28` provides 14 usable IPs. For the [No-NAT deployment topologies](nsxt-topologies.html#topology-no-nat-virtual-switch), this is a corporate routable subnet /28. For the [NAT deployment topology](nsxt-topologies.html#topology-nat), this is a non-routable subnet /28, and DNAT needs to be configured in NSX-T to access the <%= vars.product_short %> management components.

* **<%= vars.k8s_runtime_abbr %> LB CIDR**: This network provides your load balancing address space for each Kubernetes cluster created by <%= vars.product_short %>. The network also provides IP addresses for Kubernetes API access and Kubernetes exposed services. For example, `10.172.2.0/24` provides 256 usable IPs. This network is used when creating the `ip-pool-vips` described in [Creating NSX-T Objects for <%= vars.product_short %>](nsxt-create-objects.html), or when the services are deployed. You enter this network in the
**Floating IP Pool ID** field in the **Networking** pane of the <%= vars.product_tile %> tile.

##<a id='plan-ip-blocks'></a>Plan IP Blocks

When you install <%= vars.product_short %> on NSX-T, you are required to specify the **Pods IP Block ID** and **Nodes IP Block ID** in the **Networking** pane of the <%= vars.product_tile %> tile. These IDs map to the two IP blocks you must configure in NSX-T: the Pods IP Block for Kubernetes pods, and the Node IP Block for Kubernetes nodes (VMs). For more information, see the [Networking](installing-nsx-t.html#networking) section of _Installing <%= vars.product_short %> on vSphere with NSX-T Integration_.

  <img src="images/nsxt/nsxt-ip-blocks.png" alt="Required IP Blocks for NSX-T">

###<a id='pods-ip-block'></a>Pods IP Block

Each time a Kubernetes namespace is created, a subnet from the **Pods IP Block** is allocated. The subnet size carved out from this block is /24, which means a maximum of 256 pods can be created per namespace. When a Kubernetes cluster is deployed by <%= vars.product_short %>, by default 3 namespaces are created. Often additional namespaces will be created by operators to facilitate cluster use. As a result, when creating the **Pods IP Block**, you must use a CIDR range larger than /24 to ensure that NSX has enough IP addresses to allocate for all pods. The recommended size is /16. For more information, see [Creating NSX-T Objects for <%= vars.product_short %>](nsxt-create-objects.html).

  <img src="images/nsxt/pods-ip-block.png" alt="Pods IP Block">

<p class="note"><strong>Note</strong>: By default, <strong>Pods IP Block</strong> is a block of non-routable, private IP addresses.
After you deploy <%= vars.product_short %>, you can define a network profile that specifies a routable IP block for your pods.
The routable IP block overrides the default non-routable <strong>Pods IP Block</strong> when a Kubernetes cluster is deployed using that network profile. For more information, see <a href="network-profiles.html#routable-pods">Routable Pods</a> in <em>Using Network Profiles (NSX-T Only)</em>.</p>

###<a id='nodes-ip-block'></a>Nodes IP Block

Each Kubernetes cluster deployed by <%= vars.product_short %> owns a /24 subnet. To deploy multiple Kubernetes clusters, set the **Nodes IP Block ID** in the **Networking** pane of the <%= vars.product_tile %> tile to larger than /24. The recommended size is /16. For more information, see [Creating NSX-T Objects for <%= vars.product_short %>](nsxt-create-objects.html).

  <img src="images/nsxt/nodes-ip-block.png" alt="Nodes IP Block">

<p class="note"><strong>Note</strong>: You can use a smaller nodes block size for no-NAT environments with a limited number of routable subnets.
For example, /20 allows up to 16 Kubernetes clusters to be created.</p>

###<a id='reserved-ip-blocks'></a>Reserved IP Blocks

<%= vars.product_short %> reserves several CIDR blocks and IP addresses for internal use. When deploying TKGI, do not use these CIDR blocks or IP addresses.

* Each Kubernetes cluster uses the `10.100.200.0/24` subnet for Kubernetes services. Do not use this IP range for the Nodes IP Block.
* Docker is installed on each <%= vars.product_short %> worker node and is assigned the `172.17.0.0/16` network interface. Do not use this CIDR range for any TKGI component, including Ops Manager, BOSH Director, the TKGI API VM, the TKGI DB VM, and the Harbor Registry VM.
* The <%= vars.product_short %> Management Console runs the Docker daemon and reserves for it the `172.18.0.0/16` subnet and the gateway `172.18.0.1`. Do not use this CIDR range or IP address unless you customize them during OVA configuration.
* The Harbor Registry requires IP blocks in the range `172.20.0.0/16`.  Do not use this CIDR range, unless you change it in the [Harbor tile configuration](https://docs.pivotal.io/vmware-harbor/installing.html#configure_networking).

<p class="note"><strong>Note</strong>: The TKGI Management Console VM also reserves an unused <em>docker0</em> interface on <em>172.17.0.0/16</em>. This cannot be customized.</p>

The table below summarizes the IP blocks reserved by TKGI. Do not use these when deploying TKGI components.

IP Address Block    | Reserved for      | TKGI Component      | Customizable
--------------------|---------------------|-----------------------|-------------------------------
`10.100.200.0/24`   | Kubernetes services | Nodes IP Block      | No
`172.17.0.0/16`     | Docker daemon     | Worker node VM      | No
`172.17.0.0/16`     | Docker daemon     | Management Console VM | No (unused)
`172.18.0.0/16`     | Docker daemon     | Management Console VM | Yes (OVA configuration)
`172.18.0.1`        | Docker gateway    | Management Console VM | Yes (OVA configuration)
`172.20.0.0/16`     | Docker daemon     | Harbor Registry VM    | Yes (Harbor tile > Networking)

##<a id='plan-ip-blocks'></a>Gather Other Required IP Addresses

To install <%= vars.product_short %> on vSphere with NSX-T, you will need to know the following:

* Subnet name where you will install <%= vars.product_short %>
* VLAN ID for the subnet
* CIDR for the subnet
* Netmask for the subnet
* Gateway for the subnet
* DNS server for the subnet
* NTP server for the subnet
* IP address and CIDR you plan to use for the NSX-T Tier-0 Router 
