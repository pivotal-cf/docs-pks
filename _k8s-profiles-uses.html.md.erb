Topic 								              		| Description
----------------------------------------------------------------|------------------------------------------------------------------------------
[Encrypt Secrets in an etcd Database](./k8s-profiles-encrypt-etcd.html)	  		| Use an encryption provider to encrypt secrets in a cluster's etcd database.
[Admission Control: ResourceQuota](#admission-quota)	  		| Use the `ResourceQuota` admission control plugin to restrict incoming requests by resource usage.
[Set Service Node Port Range](#port-range)	  		| Use `service-node-port-range` to specify an IP range for for `NodePort` services.
[Adding an OIDC Provider](./k8s-profiles-dex-oidc.html)	  		| Customize a cluster's OIDC provider by deploying a [dex](https://github.com/dexidp/dex) connector or other OIDC provider to its pod.
[Restrict Request Header Names](#request-allowed)	  		| Set `requestheader-allowed-names` for Apiserver client authentication.

### <a id='admission-quota'></a> Admission Control: ResourceQuota

To create a Kubernetes profile that includes the `ResourceQuota` admission control plugin:

* Follow the [Create a Kubernetes Profile](./k8s-profiles.html#create)
instructions.
* Include the following `customizations` in your profile configuration file:

    ```
      "customizations": [
          {
              "component": "kube-apiserver",
              "arguments": {
                  "enable-admission-plugins": PLUGINS-LIST
              }
          }
      ],
    ```
    Where `PLUGINS-LIST` is one of the following:
      * The string `"ResourceQuota"`
      * A comma-delimited string list of validated plugins that includes `ResourceQuota`.

For more information, see [ResourceQuota](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#resourcequota) in the Kubernetes documentation.

### <a id='port-range'></a> Set Service Node Port Range

To create a Kubernetes profile that uses `service-node-port-range` for `NodePort` type services:

* Follow the [Create a Kubernetes Profile](./k8s-profiles.html#create)
instructions.
* Include the following `customizations` in your profile configuration file:

    ```
      "customizations": [
          {
              "component": "kube-apiserver",
              "arguments": {
                  "service-node-port-range": PORT-RANGE
              }
          }
      ],
    ```
    Where `PORT-RANGE` is A CIDR notation IP range from which to assign service cluster IPs, such as `30000-40000`.

If the specified `PORT-RANGE` is not valid, the `tkgi create-k8s-profile` command returns an error `invalid value for service-node-port-range`.

For more information, see [Type NodePort](https://kubernetes.io/docs/concepts/services-networking/service/#nodeport) in the Kubernetes documentation.

### <a id='request-allowed'></a> Restrict Request Header Names

To create a Kubernetes profile that uses `requestheader-allowed-names` for Apiserver client authentication:

* Follow the [Create a Kubernetes Profile](./k8s-profiles.html#create)
instructions.
* Include the following `customizations` in your profile configuration file:

    ```
      "customizations": [
          {
              "component": "kube-apiserver",
              "arguments": {
                  "requestheader-allowed-names": COMMON-NAMES
              }
          }
      ],
    ```
    Where `COMMON-NAMES` is a string list of valid Common Name values in the signed client certificate, such as `"cn1.com,c2.com"`.

For more information, see [Kubernetes Apiserver Client Authentication](https://kubernetes.io/docs/tasks/access-kubernetes-api/configure-aggregation-layer/) in the Kubernetes documentation.
