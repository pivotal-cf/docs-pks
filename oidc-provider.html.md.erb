---
title: OIDC Provider for Kubernetes Clusters
owner: TKGI
---

This topic describes the global default OpenID Connect (OIDC) provider
setting that you can use for Kubernetes clusters in <%= vars.product_full %>
and how to override it for individual clusters.

## <a id='overview'></a>Overview

Configuring an OIDC provider for <%= vars.k8s_runtime_abbr %>-provisioned clusters
enables Kubernetes to verify end-user identities based
on the authentication performed by UAA or a custom OIDC provider.

You can use the following methods to configure an OIDC provider in
<%= vars.product_short %>:

* Configure UAA as the default OIDC provider in the
**<%= vars.product_tile %>** tile > **UAA**. For more information,
see [UAA as the Default OIDC Provider](#uaa-oidc)
below.
* Configure a custom OIDC provider by applying a Kubernetes profile
to one or more <%= vars.k8s_runtime_abbr %>-provisioned clusters. For more information, see
[Custom OIDC Provider](#custom) below.

## <a id='uaa-oidc'></a> UAA as the Default OIDC Provider

The **<%= vars.product_tile %>** tile > **UAA** > **Configure created clusters
to use UAA as the OIDC provider** is a global setting for
<%= vars.k8s_runtime_abbr %>-provisioned clusters, described in the table below:

<table class="nice">
  <tr>
    <th>Option</th>
    <th>Description</th>
  </tr>
  <tr>
    <td><strong>Enabled</strong></td>
    <td>If you enable UAA as the OIDC provider, Kubernetes verifies end-user
    	identities based on authentication executed by UAA as follows:
      <ul>
        <li>If you select <strong>Internal UAA</strong>, Kubernetes
        authenticates users against the internal UAA authentication mechanism.</li>
        <li>If you select <strong>LDAP Server</strong>, Kubernetes authenticates
        users against the LDAP server.</li>
        <li>If you select <strong>SAML Identity Provider</strong>, Kubernetes
        authenticates users against the SAML identity provider.</li>
      </ul>
    </td>
  </tr>
  <tr>
    <td><strong>Disabled</strong></td>
    <td>If you do not enable UAA as the OIDC provider, Kubernetes authenticates
    users against its internal user management system.</td>
  </tr>
</table>

When you enable UAA as your OIDC provider, existing <%= vars.k8s_runtime_abbr %>-provisioned clusters are
upgraded to use OIDC. This invalidates your kubeconfig files. You must
regenerate the files for all existing clusters.

## <a id='custom'></a>Custom OIDC Provider

You can configure one or more Kubernetes clusters to use a custom OIDC
provider by creating and applying a Kubernetes profile to the clusters.
This overrides the global **Configure created clusters to use UAA as the
OIDC provider** setting in the **<%= vars.product_tile %>** tile > **UAA**.

For instructions, see
<a href="./k8s-profiles-dex-oidc.html">Adding an OIDC Provider</a>.

## <a id='after'></a>After You Configure Your OIDC Provider

If you want to give Kubernetes end users, such as developers, access to
<%= vars.k8s_runtime_abbr %>-provisioned clusters after you configure your OIDC provider,
you must create Kubernetes role bindings for them.

For instructions, see
[Managing Cluster Access and Permissions](manage-cluster-permissions.html).
 
      