---
title: Creating Managed Identities in Azure for Tanzu Kubernetes Grid Integrated Edition
owner: Ops Manager
---

This topic describes how to create managed identities for <%= vars.product_full %> on Azure.

In order for Kubernetes to create load balancers and attach persistent disks to pods, you must create managed identities with sufficient permissions.

You need separate managed identities for the Kubernetes cluster control plane and worker node VMs.
<%= vars.vm_credentials %>

## <a id='id-resource-group'></a>Retrieve Your Subscription ID and Resource Group

To perform the procedures in this topic, you must have your Azure Subscription ID and the name of your <%= vars.product_short %> Resource Group.

If you do not know your Subscription ID or Resource Group:  

1. Navigate to the Azure portal.  
1. Click **Resource groups**.  
1. Determine the name of your <%= vars.product_short %> Resource Group.  
1. Determine the Subscription ID for your <%= vars.product_short %> Resource Group.  

<p class="note"><strong>Note:</strong> You specified the Subscription ID to use and your <%= vars.product_short %> Resource Group name 
  when completing the steps in <a href="https://docs.pivotal.io/ops-manager/azure/deploy-manual.html#network">Step 1: Create Network Resources</a>
in <i>Deploying Ops Manager on Azure Manually</i>.  
</p>

## <a id='create-master'></a>Create the Control Plane Node Managed Identity

Perform the following steps to create the managed identity for the control plane nodes:

1. Create a role definition using the following template:  

    ```
    {
        "Name":  "<%= vars.k8s_runtime_abbr %> control plane",
        "IsCustom":  true,
        "Description":  "Permissions for <%= vars.k8s_runtime_abbr %> control plane",
        "Actions":  [
            "Microsoft.Network/*",
            "Microsoft.Compute/disks/*",
            "Microsoft.Compute/virtualMachines/write",
            "Microsoft.Compute/virtualMachines/read",
            "Microsoft.Storage/storageAccounts/*"
        ],
        "NotActions":  [

        ],
        "DataActions":  [

        ],
        "NotDataActions":  [

        ],
        "AssignableScopes":  [
          "/subscriptions/SUBSCRIPTION-ID/resourceGroups/RESOURCE-GROUP"
        ]
    }
    ```

    Where:  
    * `SUBSCRIPTION-ID` is your Subscription ID.  
    * `RESOURCE-GROUP` is the name of your <%= vars.product_short %> Resource Group.  

    For more information about custom roles in Azure, see 
    [Custom Roles in Azure](https://docs.microsoft.com/en-us/azure/role-based-access-control/custom-roles) 
    in the Azure documentation.

1. Save your template as `tkgi_master_role.json`.
1. To log in, run the following command with the Azure CLI:

    ```
    az login
    ```
    To authenticate, navigate to the URL in the output, enter the provided code, and click your account.
1. Create the role in Azure by running the following command from the directory with `tkgi_master_role.json`:

    ```
    az role definition create --role-definition tkgi_master_role.json
    ```
1. Create a managed identity by running the following command:

    ```
    az identity create -g RESOURCE-GROUP -n tkgi-master
    ```
    Where `RESOURCE-GROUP` is the name of your <%= vars.product_short %> resource group.
    <br><br>
    For more information about managed identities, see [Create a user-assigned managed identity](https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/how-to-manage-ua-identity-cli#create-a-user-assigned-managed-identity) in the Azure documentation.
1. Assign managed identity access to the <%= vars.product_short %> resource group by performing the following steps:
  1. Navigate to the Azure Portal and log in.
  1. Open the <%= vars.product_short %> resource group.
  1. Click **Access control (IAM)** on the left panel.
  1. Click **Add role assignment**.
  1. On the **Add role assignment** page, enter the following configurations:
      1. For **Assign access to**, select **User Assigned Managed Identity**.
      1. For **Role**, select **<%= vars.k8s_runtime_abbr %> master**.
      1. For **Select**, select the **tkgi-master** identity created above.

<p class="note"><strong>Note:</strong> The <strong><%= vars.k8s_runtime_abbr %> control plane</strong> custom role created above is less permissive
than the built-in roles provided by Azure. However, if you want to use the built-in roles
instead of the recommended custom role, you can select the following three built-in roles in Azure: <strong>Storage Account Contributor</strong>, <strong>Network Contributor</strong>, and <strong>Virtual Machine Contributor</strong>.</p>

## <a id='create-worker'></a>Create the Worker Node Managed Identity

Perform the following steps to create the managed identity for the worker nodes:

1. Create a role definition using the following template:  

    ```
    {
        "Name":  "<%= vars.k8s_runtime_abbr %> worker",
        "IsCustom":  true,
        "Description":  "Permissions for <%= vars.k8s_runtime_abbr %> worker",
        "Actions":  [
            "Microsoft.Compute/virtualMachines/read",
            "Microsoft.Storage/storageAccounts/*"
        ],
        "NotActions":  [

        ],
        "DataActions":  [

        ],
        "NotDataActions":  [

        ],
        "AssignableScopes":  [
          "/subscriptions/SUBSCRIPTION-ID/resourceGroups/RESOURCE-GROUP"
        ]
    }
    ```

    Where:  
    * `SUBSCRIPTION-ID` is your Subscription ID.  
    * `RESOURCE-GROUP` is the name of your <%= vars.product_short %> Resource Group.  

1. Save your template as `tkgi_worker_role.json`.
1. Create the role in Azure by running the following command from the directory with `tkgi_worker_role.json`:

    ```
    az role definition create --role-definition tkgi_worker_role.json
    ```

1. Create a managed identity by running the following command:

    ```
    az identity create -g RESOURCE-GROUP -n tkgi-worker
    ```
    Where `RESOURCE-GROUP` is the name of your <%= vars.product_short %> resource group.
1. Assign managed identity access to the <%= vars.product_short %> resource group by performing the following steps:
  1. Navigate to the Azure Portal and log in.
  1. Open the <%= vars.product_short %> resource group.
  1. Click **Access control (IAM)** on the left panel.
  1. Click **Add role assignment**.
  1. On the **Add role assignment** page, enter the following configurations:
      1. For **Assign access to**, select **User Assigned Managed Identity**.
      1. For **Role**, select **<%= vars.k8s_runtime_abbr %> worker**.
      1. For **Select**, select the **tkgi-worker** identity created above.

<p class="note"><strong>Note:</strong> The <strong><%= vars.k8s_runtime_abbr %> worker</strong> custom role created above is less permissive
than the built-in roles provided by Azure. However, if you want to use the built-in roles instead of the recommended custom role,
you can select the <strong>Storage Account Contributor</strong> built-in role in Azure.</p>

## <a id="next-steps"></a>Next Installation Step

To install and configure <%= vars.product_short %>, follow the instructions in
[Installing <%= vars.product_short %> on Azure](installing-azure.html).
