---
title: Creating and Configuring a GCP Load Balancer for Tanzu Kubernetes Grid Integrated Edition Clusters
owner: TKGI
---

This topic describes how to configure a Google Cloud Platform (GCP) load balancer
for a Kubernetes cluster deployed by <%= vars.product_full %>.

##<a id="overview"></a> Overview

A load balancer is a third-party device that distributes network and application
traffic across resources. You can use a load balancer to access a <%= vars.k8s_runtime_abbr %>-deployed cluster
from outside the network using the <%= vars.control_plane %> and `kubectl`. Using a load balancer
can also prevent individual network components from being overloaded by high
traffic.

You can configure GCP load balancers only for <%= vars.k8s_runtime_abbr %> clusters that are deployed on GCP.

To configure a GCP load balancer, follow the procedures below:

1. [Create a GCP Load Balancer](#create)
1. [Create a DNS Entry](#dns-entry)
1. [Create the Cluster](#create-cluster)
1. [Configure Load Balancer Back End](#backend)
1. [Create a Network Tag](#tag)
1. [Create Firewall Rules](#firewall)
1. [Access the Cluster](#access)

To reconfigure a cluster load balancer, follow the procedures in [Reconfigure Load Balancer](#reconfigure) below.

##<a id="prereqs"></a> Prerequisites

The procedures in this topic have the following prerequisites:

* To complete these procedures, you must have already configured a load balancer
to access the <%= vars.control_plane %>. For more information, see [Creating a GCP Load Balancer
for the <%= vars.control_plane %>](gcp-api-load-balancer.html).
* The version of the <%= vars.k8s_runtime_abbr %> CLI you are using must match the version of the <%= vars.product_tile %> tile that you are installing.

##<a id="configure"></a> Configure GCP Load Balancer

Follow the procedures in this section to create and configure a load balancer
for <%= vars.k8s_runtime_abbr %>-deployed Kubernetes clusters using GCP. Modify the example commands
in these procedures to match your <%= vars.product_short %> installation.

###<a id="create"></a> Create a GCP Load Balancer

To create a GCP load balancer for your <%= vars.k8s_runtime_abbr %> clusters, do the following:

1. Navigate to the [Google Cloud Platform console](https://console.cloud.google.com/).
1. In the sidebar menu, select **Network Services** > **Load balancing**.
1. Click **Create a Load Balancer**.
1. In the **TCP Load Balancing** pane, click **Start configuration**.
1. Click **Continue**. The **New TCP load balancer** menu opens.
1. Give the load balancer a name. For example, `my-cluster`.
1. Click **Frontend configuration** and configure the following settings:
  1. Click **IP**.
  1. Select **Create IP address**.
  1. Give the IP address a name. For example, `my-cluster-ip`.
  1. Click **Reserve**. GCP assigns an IP address.
  1. In the **Port** field, enter `8443`.
  1. Click **Done** to complete front end configuration.
1. Review your load balancer configuration and click **Create**.

###<a id='dns-entry'></a>Create a DNS Entry

To create a DNS entry in GCP for your <%= vars.k8s_runtime_abbr %> cluster, do the following:

1. From the GCP console, navigate to **Network Services > Cloud DNS**.

1. Select the DNS zone for your domain. To retrieve your zone name, select the zone you used 
when you created the <%= vars.control_plane %> DNS entry. See the [Create a DNS Entry](./gcp-api-load-balancer.html#dns-entry) 
section in _Creating a GCP Load Balancer for the <%= vars.control_plane %>_.

1. Click **Add record set**.

1. Under **DNS Name**, enter a subdomain for the load balancer. For example, if
your domain is `example.com`, enter `my-cluster` in this field to use `my-cluster.example.com`
as your <%= vars.k8s_runtime_abbr %> cluster load balancer hostname.

1. Under **Resource Record Type**, select **A** to create a DNS address record.

1. Enter a value for **TTL** and select a **TTL Unit**.

1. Enter the GCP-assigned IP address you created in [Create a Load Balancer](#create) above.

1. Click **Create**.

### <a id='create-cluster'></a> Create the Cluster

To create a cluster, follow the steps input [Create a Kubernetes Cluster](create-cluster.html#create)
section of _Creating Clusters_. Use the <%= vars.k8s_runtime_abbr %> cluster hostname from the above step
as the external hostname when you run the `tkgi create-cluster` command. 

### <a id='backend'></a> Configure Load Balancer Back End

To configure the back end of the load balancer, do the following:

1. Record the ID for your control plane node VMs by doing one of the following: 
      + Complete [Identify Kubernetes Cluster Control Plane VMs](./create-cluster.html#master-id) in _Creating Clusters_ 
      + Complete the following procedure:

    1. Log in to <%= vars.k8s_runtime_abbr %> by running the following command:
        
            ```
            tkgi login -a TKGI-API -u USERNAME -k
            ```
            Where: 
            + `TKGI-API` is the domain name for the <%= vars.control_plane %> that you entered in **Ops Manager** > **Tanzu Kubernetes Grid Integrated Edition** > **<%= vars.control_plane %>** > **API Hostname (FQDN)**. For example, `api.tkgi.example.com`.
            + `USERNAME` is your user name. 
            <%= partial "saml-sso-login" %>
    1. Locate the control plane node IP addresses by running the following command:
          
            ```
            tkgi cluster CLUSTER-NAME
            ```
            Where `CLUSTER-NAME` is the unique name for your cluster.<br><br>

            From the output of this command, record the value of **Kubernetes Master IP(s)**. This value lists the IP addresses of all control plane node VMs in the cluster.

    1. Navigate to the [Google Cloud Platform console](https://console.cloud.google.com/).
    1. From the sidebar menu, navigate to **Compute Engine** > **VM instances**.
    1. Filter the VMs using the network name you provided when you deployed Ops Manager on GCP. 
    1. Record the IDs of the control plane node VMs associated with the IP addresses you recorded in the above step.
        The above IP addresses appear under the **Internal IP** column. 
1. In the [Google Cloud Platform console](https://console.cloud.google.com/), from the sidebar menu, navigate to **Network Services** > **Load balancing**.
1. Select the load balancer that you created for the cluster and click **Edit**.
1. Click **Backend configuration** and configure the following settings:
  1. Select all the control plane node VMs for your cluster from the dropdown. 
  <p class="note warning"><strong>Warning:</strong> If control plane VMs are recreated for any reason, such as a stemcell upgrade, you must reconfigure the load balancer to target the new control plane VMs. For more information, see the <a href="#reconfigure">Reconfigure Load Balancer</a> section below.
  1. Specify any other configuration options you require and click **Update** to complete back end configuration.
  <p class="note"><strong>Note:</strong> For clusters with multiple control plane node VMs, health checks on port 8443 are recommended.</p>

###<a id="tag"></a> Create a Network Tag

To create a network tag, do the following:

1. In the Google Cloud Platform sidebar menu, select **Compute Engine** > **VM instances**.
1. Filter to find the control plane instances of your cluster. Type `master` in the **Filter VM Instances** search box and press **Enter**.
1. Click the name of the control plane instances. The **VM instance details** menu opens.
1. Click **Edit**.
1. Click in the **Network tags** field and type a human-readable name in lowercase letters. Press **Enter** to create the network tag.
1. Scroll to the bottom of the screen and click **Save**.

###<a id="firewall"></a> Create Firewall Rules

To create firewall rules, do the following:

1. In the Google Cloud Platform sidebar menu, select **VPC Network** > **Firewall Rules**.
1. Click **Create Firewall Rule**. The **Create a firewall rule** menu opens.
1. Give your firewall rule a human-readable name in lower case letters. For ease of use, you may want to align this name with the name of the load balancer you created in [Create a GCP Load Balancer](#create).
1. In the **Network** menu, select the VPC network on which you have deployed the <%= vars.product_tile %> tile.
1. In the **Direction of traffic** field, select **Ingress**.
1. In the **Action on match** field, select **Allow**.
1. Confirm that the **Targets** menu is set to `Specified target tags` and enter the tag you made in [Create a Network Tag](#tag) in the **Target tags** field.
1. In the **Source filter** field, choose an option to filter source traffic.
1. Based on your choice in the **Source filter** field, specify IP addresses, Subnets, or Source tags to allow access to your cluster.
1. In the **Protocols and ports** field, choose **Specified protocols and ports** and enter the port number you specified in [Create a GCP Load Balancer](#create), prepended by `tcp:`. For example: `tcp:8443`.
1. Specify any other configuration options you require and click **Done** to complete front end configuration.
1. Click **Create**.

###<a id="access"></a> Access the Cluster

To complete cluster configuration, do the following:

1. From your local workstation, run `tkgi get-credentials CLUSTER-NAME`.

    Where `CLUSTER-NAME` is the unique name for your cluster.
      For example: 

      <pre class="terminal">$ tkgi get-credentials tkgi-example-cluster<br>
      Fetching credentials for cluster tkgi-example-cluster.
      Context set for cluster tkgi-example-cluster.
      </pre>
  The `tkgi get-credentials` command creates a local `kubeconfig` that enables you to manage the cluster.
  For more information about the `tkgi get-credentials` command, see [Retrieving Cluster Credentials and Configuration](cluster-credentials.html).
  
    <%= partial "saml-sso-login" %>

1. Run `kubectl cluster-info` to confirm you can access your cluster using the Kubernetes CLI.

See [Managing <%= vars.product_short %>](managing.html) for information about checking cluster health and viewing cluster logs.

##<a id="reconfigure"></a> Reconfigure Load Balancer

If Kubernetes control plane node VMs are recreated for any reason, you must reconfigure your cluster load balancers to point to the new control plane VMs.
For example, after a stemcell upgrade, BOSH recreates the VMs in your deployment.

To reconfigure your GCP cluster load balancer to use the new control plane VMs, do the following:

1. Locate the VM IDs of the new control plane node VMs for the cluster. For information about locating the VM IDs, see [Identify Kubernetes Cluster Control Plane VMs](create-cluster.html#master-id) in _Creating Clusters_.
1. Navigate to the [GCP console](https://console.cloud.google.com/).
1. In the sidebar menu, select **Network Services > Load balancing**.
1. Select your cluster load balancer and click **Edit**.
1. Click **Backend configuration**.
1. Click **Select existing instances**.
1. Select the new control plane VM IDs from the dropdown. Use the VM IDs you located in the first step of this procedure.
1. Click **Update**.
