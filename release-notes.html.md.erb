---
title: PKS Release Notes
owner: PKS
---

<strong><%= modified_date %></strong>

This topic contains release notes for Pivotal Container Service (PKS) v1.3.x.

## <a id="v1.3.0"></a>v1.3.0

**Release Date**: January 10, 2019

### <a id="v1.3.0-snapshot"></a>Product Snapshot

<table class="nice">
    <th>Element</th>
    <th>Details</th>
    <tr>
        <td>Version</td>
        <td>v1.3.0</td>
    </tr>
    <tr>
        <td>Release date</td>
        <td>January 10, 2019</td>
    </tr>
    <tr>
        <td>Compatible Ops Manager versions</td>
        <td>v2.3.1+, v2.4.0+</td>
    </tr>
    <tr>
        <td>Stemcell version</td>
        <td>v170.15</td>
    </tr>
    <tr>
        <td>Kubernetes version</td>
        <td>v1.12.4</td>
    </tr>
    <tr>
        <td>On-Demand Broker version</td>
        <td>v0.24</td>
    </tr>
    <tr>
        <td>NSX-T versions</td>
        <td>v2.3.0+</td>
    </tr>
    <tr>
        <td>NCP version</td>
        <td>v2.3.1</td>
    </tr>
    <tr>
        <td>Docker version</td>
        <td>v18.06.1-ce<br><a href="https://github.com/cloudfoundry-incubator/docker-boshrelease/">CFCR</a></td>
    </tr>
</table>

### <a id="v1.3.0-iaas"></a>Feature Support by IaaS

<table>
  <tr>
    <th></th>
    <th>AWS</th>
    <th>Azure</th>
    <th>GCP</th>
    <th>vSphere</th>
    <th>vSphere with NSX-T</th>
  </tr>

  <tr>
    <th>Automatic Kubernetes Cluster API load balancer</th>
    <td></td>
    <td></sup></td>
    <td></td>
    <td></td>
    <td>&check;</td>
  </tr>
  <tr>
    <th>HTTP proxy</th>
    <td></td>
    <td></sup></td>
    <td></td>
    <td>&check;</td>
    <td>&check;</td>
  </tr>
  <tr>
    <th>Multi-AZ storage</th>
    <td></td>
    <td></sup></td>
    <td></td>
    <td>&check;</td>
    <td>&check;</td>
  </tr>
  <tr>
    <th>Per-namespace subnets</th>
    <td></td>
    <td></sup></td>
    <td></td>
    <td></td>
    <td>&check;</td>
  </tr>
  <tr>
    <th>Service <code>type:LoadBalancer</code></th>
    <td>&check;<sup>&#42;&#42;</sup></td>
    <td>&check;</sup></td>
    <td>&check;</td>
    <td></td>
    <td>&check;</td>
  </tr>
</table>



<sup>&#42;&#42;</sup> For more information about configuring Service `type:LoadBalancer` on AWS, see the [Access Workloads Using an Internal AWS Load Balancer](deploy-workloads.html#internal-lb) section of _Deploying and Accessing Basic Workloads_.

### <a id="v1.3.0-beta2-upgrade"></a>Upgrade Path

The supported upgrade paths to PKS v1.3.0 are from PKS v1.2.5 and later.

For more information, see [Upgrading PKS](upgrade-pks.html) and [Upgrading PKS with NSX-T](upgrade-pks-nsxt.html).

<p class="note"><strong>Note</strong>: Upgrading from PKS v1.2.5+ to PKS v1.3.x causes all certificates to be automatically regenerated. The old certificate authority is still trusted, and has a validity of one year. But the new certificates are signed with a new certificate authority, which is valid for four years.</p>

### <a id="v1.3.0-beta2-whats-new"></a>What's New

PKS v1.3.0-beta.2 adds the following:

- Support for Azure. For more information, see [Azure](azure-index.html).
- BOSH Backup and Restore (BBR) for single-master clusters.
- Routable pods on NSX-T. For more information, see [Routable Pod Networks](network-profiles-define.html#routable-pods) in <em>Defining Network Profiles</em>.
- Large size NSX-T load balancers with Bare Metal NSX-T edge nodes.
- Use HTTP proxy for NSX-T components.
- Sink Resources in internetless environments.
- Create Sink resources via the PKS cli.
- Support for Multiple T0 NSX-T routers. For more information, see [Configuring Multiple Tier-0 Routers for Tenant Isolation](nsxt-multi-t0.html).
- Support for multiple PKS foundations on the same NSX-T. For more information, see [Implementing a Multi-Foundation PKS Deployment](nsxt-multi-pks.html).
- Upgrade Smoke Tests to validiate creation & deletion of a Kubernetes cluster, does not validate health of running clusters.
- Support for scaling down the number of worker nodes.
- Support for defining the CIDR range for Kubernetes pods on Flannel networks.
- Kubernetes 1.12.4.  
- **Bug Fix**: The **No proxy** property for vSphere now accepts wildcard domains like
`*.example.com` and `example.com`. See [Networking](./installing-pks-vsphere.html#networking) in
_Installing PKS on vSphere_ for more information.
- **Bug Fix**: The issue with NSX-T where special characters in username and password doesn't work is resolved.
- **Security Fix**: CVE 2018-18264: This CVE allows unauthenticated secret access to the Kubernetes Dashboard. For more information, see pull requests [3400](https://github.com/kubernetes/dashboard/pull/3400) and [3289](https://github.com/kubernetes/dashboard/pull/3289) in the Kubernetes Dashboard GitHub repo.
- **Security Fix**: [CVE-2018-15759](https://pivotal.io/security/cve-2018-15759): This CVE contains an insecure method of verifying credentials. A remote unauthenticated malicious user may make many requests to the service broker with a series of different credentials, allowing them to infer valid credentials and gain access to perform broker operations.


### <a id="v1.3.0-known-issues"></a>Breaking Changes and Known Issues

<p class="note breaking"><strong>Breaking Change:</strong> Heapster is deprecated in PKS v1.3, and
Kubernetes has retired Heapster. For more information, see the
<a href="https://github.com/kubernetes-retired/heapster">kubernetes-retired/heapster</a>
repository in GitHub.</p>

PKS v1.3.0 has the following known issues:

####<a id='invalid-cert-chains'></a> (1) Cannot Connect Securely to Kubernetes Clusters

When clients attempt to make secure API requests to Kubernetes clusters, server certificate validation fails due to an invalid certificate chain.

The server certificates in PKS v1.3.0 for the kube-apiserver and kubelet contain invalid certificate chains, introduced by the certificate rotation performed automatically as part of the upgrade to PKS v1.3.0. 

**Workaround**: Disable server certificate validation. Use the `-k` flag when issuing `curl` commands, or use flags such as `skip-ssl-validation`.

####<a id="azure-orange-config"></a> (2) PKS Cannot Be Deployed Due to Incomplete Configuration

When deploying PKS with Ops Manager, the PKS tile remains orange and cannot be deployed
even though service plan configuration appears to be complete. This is due to an invalid default VM type.
This issue has been observed in Azure but may also occur in other IaaSes.

**Workaround**: On the **Plan** configuration screen, select a valid and non-default VM type in the **Master/ETCD VM Type**, **Worker VM Type**, and **Errand VM Type** dropdowns. 

####<a id="flannel"></a> (3) PKS Flannel Network Gets Out of Sync with Docker Bridge Network (cni0)

When VMs have been powered down for multiple days, turning them back on and issuing a `bosh recreate` to recreate the VMs causes the pods to get stuck in a `ContainerCreating` state.

**Workaround**: See [PKS Flannel network gets out of sync with docker bridge network (cni0)](https://pvtl.force.com/s/article/PKS-Flannel-network-gets-out-of-sync-with-docker-bridge-network-cni0) in the Pivotal Knowledge Base.




