---
title: Create PKS Client
owner: PKS-NSXT
---

<strong><%= modified_date %></strong>

This section provides instructions for creating the PKS Client VM and installing various command-line tools for interacting with the Enterprise PKS Platform. These tools are used by platform operators responsible for managing the PKS infrastructure and developers who are consumers of the Kubernetes cluster services.

##<a id='create-vm'></a> Create the VM

Create an Ubuntu VM to be used as the `pks-client`.

Alternatively, you can use the Ops Manager VM. For instructions, see the following knowledgebase article: [Pivotal](https://community.pivotal.io/s/article/generate-an-ssh-key-pair-for-installing-ops-manager-v2-6-on-vsphere) or [VMware](https://kb.vmware.com/s/article/71143).

1. Log in to the vSphere client for your environment.

1. Create new Ubuntu VM named `pks-cli-vm`.

  - Downoad an Ubuntu ISO.
  - Upload this ISO to a datastore in vSphere (such as vSAN).
  - Create a new VM in vSphere and complete the wizard.
  - Select the PKS-MGMT network.
  - Select Datastore ISO and browse to and select the Ubuntu ISO.
  - You have to install the OS. To do this, download an Ubuntu ISO, attach it as a CD to the VM and boot it.
  - Get the IP address for the `pks-cli-vm` from NSX Manager > Inventory > IP Pools tab in the ip-pool-snat NAT pool. For example, the routable IP address to my CLI-VM: 10.40.14.6.

1. Log in to the Ubuntu cli-vm host.

- Ubuntu
- {standard-password}

1. Upgrade and/or update the software: `sudo apt-get upgrade` | `sudo apt-get update`.

1. Create directory: `mkdir pks`.

##<a id='cli-install'></a> Install the PKS and Kubectl CLIs

1. Log in to the Pivotal network <https://network.pivotal.io/products/pivotal-container-service/> and download the following `pks-software`:

  - pks-linux-amd64-VERSION
  - kubectl-linux-amd64-VERSION

1. Copy CLIs to Ops Manager using SCP (PSCP in this case):

    pscp c:\temp\pks-linux-amd64-VERSION ubuntu@IP-ADDRESS:/home/ubuntu/pks
    pscp c:\temp\kubectl-linux-amd64-VERSION ubuntu@IP-ADDRESS:/home/ubuntu/pks

  For example:

    pscp c:\temp\pks\pks-linux-amd64-1.5.0-build.245 ubuntu@10.197.79.152:/home/ubuntu/pks
    pscp c:\temp\pks\kubectl-linux-amd64-1.14.1 ubuntu@10.197.79.152:/home/ubuntu/pks

1. Make the CLIs executable:

    chmod +x pks-linux-amd64-VERSION
    chmod +x kubectl-linux-amd64-VERSION

  For example:

    chmod +x pks-linux-amd64-1.5.0-build.245
    chmod +x kubectl-linux-amd64-1.14.1

1. Rename and move the files to the PATH:

    sudo mv pks-linux-amd64-1.5.0-build.245 /usr/local/bin/pks
    sudo mv kubectl-linux-amd64-1.13.5 /usr/local/bin/kubectl

1. Verify CLI installation:

	`pks --version`
	`kubectl version`

1. View CLI help.

	`pks --help`
	`kubectl --help`

##<a id='uaac-install'></a> Install UAAC

The UAA CLI (UAAC) is a command line interface for the Cloud Foundry User Account and Authentication (UAA) identity server. UACC is used to manage user accounts and authorization for the PKS platform. For more information, see https://github.com/cloudfoundry/cf-uaac.

1. Install UAAC:

    cd /usr/local/bin
    sudo apt -y install ruby ruby-dev gcc build-essential g++
    sudo gem install cf-uaac

  To verify installation:

    uaac -v

##<a id='om-install'></a> Install OM CLI

The Ops Manager CLI is used to deploy products to Pivotal Ops Manager. 

Repository: https://github.com/pivotal-cf/om
Documentation: https://docs.pivotal.io/pivotalcf/2-1/customizing/ops-man.html

To install the Ops Manager CLI, run these commands:

```
cd /usr/local/bin
sudo wget https://github.com/pivotal-cf/om/releases/download/0.38.0/om-linux
sudo chmod +x om-linux
sudo mv om-linux /usr/local/bin/om
```

To verify installation:

```
om -v
```

Expected result:

`0.38.0`

##<a id='bosh-install'></a> Install BOSH CLI

Bosh is used to manage PKS deployments and provides information about the VMs using its Cloud Provider Interface (CPI) which is vSphere in this case.

Documentation: https://bosh.io/docs/ and https://docs.pivotal.io/pivotalcf/2-2/customizing/deploy-bosh-om.html

Go here to find out Bosh CLI versions: https://s3.amazonaws.com/bosh-cli-artifacts/

To install the bosh cli, run the following commmands: 

```
sudo wget https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-2.0.48-linux-amd64
sudo chmod +x bosh-cli-2.0.48-linux-amd64
sudo mv bosh-cli-2.0.48-linux-amd64 /usr/local/bin/bosh
```

Verify:

```
bosh -v
```

##<a id='nsxc-install'></a> Install NSX CLI

The NSX CLI is used to clean NSX-T objects after a Kubernetes cluster has been deleted.

```
sudo apt -y install git httpie jq
sudo wget https://storage.googleapis.com/pks-releases/nsx-helper-pkg.tar.gz
sudo tar -xvzf nsx-helper-pkg.tar.gz
sudo chmod +x nsx-cli.sh
```

To verify:

nsx-cli.sh

Result:

```
ubuntu@ubuntu:/usr/local/bin$ nsx-cli.sh
bash /usr/local/bin/nsx-cli.sh [category] [method] [parameters...]
ipam
  allocate
  release [IP_ADDRESS]
nat
  create-rule [CLUSTER_UUID] [MASTER_IP] [FLOATING_IP]
  delete-rule [CLUSTER_UUID]
cleanup [CLUSTER_UUID] [DRY_RUN]
```

##<a id='users-add'></a> Add PKS Users to UAA 

1. Add PKS API hostname and IP address to a DNS server.

  Get the PKS API Hostname from the PKS tile > PKS API module.

  Get the IP address from vSphere.

  Add the information to the /etc/hosts file, for example:

    vi /etc/hosts

    127.0.0.1 localhost
    ...
    10.0.0.7 api.pks.vsphere.local

1. Target PKS using UAAC:

    uaac target https://PKS-HOSTNAME:8443 --skip-ssl-validation

1. Fetch the UAA admin token.

  Retrieve the token from Ops Manager: PKS Tile > Credentials > Pks Uaa Management Admin Client

  Click on Link to Credential, copy the secret value.

  Run the following command:

    uaac token client get admin -s SECRET

  For example:

    uaac target https://api.comet.pks.local:8443 --skip-ssl-validation
    Unknown key: Max-Age = 86400

    Target: https://api.comet.pks.local:8443

    uaac token client get admin -s syMZA-FUlvdEXgXrgI-SDmkUVuP5rlzA
    Unknown key: Max-Age = 86400

    Successfully fetched token via client credentials grant.
    Target: https://api.comet.pks.local:8443
    Context: admin, from client admin

1. Add two users: PKS Admin and PKS Manage.

    uaac user add pks-admin --emails pks-admin@example.com -p PASSWORD
    user account successfully added
    
    uaac user add k8s-admin --emails k8s-admin@example.com -p PASSWORD
    user account successfully added
    
    uaac member add pks.clusters.admin pks-admin
    success
    uaac member add pks.clusters.manage k8s-admin
    success

##<a id='pks-login'></a> Log In to PKS 

1. Login as pks-admin.  

    pks login -a "api.pks.vsphere.local" -u "pks-admin" -p "PASSWORD" -k

    API Endpoint: api.pks.vsphere.local
    User: pks-admin
    Login successful.

1. Log in a k8s-admin.

    pks login -a "api.pks.vsphere.local" -u "k8s-admin" -p "PASSWORD" -k

    API Endpoint: api.comet.pks.local
    User: k8s-admin
    Login successful.

##<a id='pks-cluster'></a> Create Test Cluster

Run the following command:

	pks create-cluster CLUSTER_NAME -e CLUSTER_HOSTNAME -p PLAN_NAME

For example:

	pks create-cluster hello-world -e hello-world-cluster -p small

Run the following command to view:

	pks clusters

	pks cluster CLUSTER_NAME 

##<a id='bosh-verify'></a> Use BOSH to Manage PKS 

1. Create a BOSH alias.

  Go to BOSH Director tile > Credentials > Bosh Commandline Credentials.

  Copy the string `bosh_commandline_credentials` and create a Bash alias. For example:

    alias bosh="BOSH_CLIENT=ops_manager BOSH_CLIENT_SECRET=secret-from-bosh_commandline_credentials BOSH_CA_CERT=/var/tempest/workspaces/default/root_ca_certificate BOSH_ENVIRONMENT=ip-from-bosh_commandline_credentials bosh "

  Or, create `bosh_evn.sh` and run the command `source bosh_env.sh`.

    export BOSH_CLIENT=ops_manager
    export BOSH_CLIENT_SECRET=SECRET
    export BOSH_CA_CERT=/var/tempest/workspaces/default/root_ca_certificate
    export BOSH_ENVIRONMENT=IP-ADDRESS-OF-BOSH
    alias om=om-linux

1. Get bosh deployments.

    bosh deployments

1. Get bosh VMs.

    bosh vms

1. Get bosh components.

    bosh releases

1. SSH to a Kubernetes node.

    bosh ssh -d 'service-instance_9dd62330-fcea-469f-a50d-27c746622662' master/b1f99643-6905-4427-a01c-c26fc9101d40

1. Delete a Kubernetes cluster.

  This may be needed if a Kubernetes cluster fails to deploy, and you can't delete it using the PKS CLI.

    bosh -e pks delete-deployment -d service-instance_3bd9069f-aafd-4525-a145-f3e48570c055

##<a id='k8s-creds'></a> Connect to Kubernetes Cluster 

1. Retrieve credentials for the Kubernetes cluster.

    pks get-credentials CLUSTER-NAME

1. Verify that the /.kube/config file is created. 

  The following file is created:

    ls -l ~/.kube/config

1. Create a DNS record for the Kubernetes cluster and master node IP address.

  Run the following command to get the information:

    pks cluster CLUSTER-NAME

  Get the value for the "Kubernetes Master Host" and the value for the "Kubernetes Master IP(s)".

  Use these values to create a DNS record. For example:

    vi /etc/hosts

    10.197.100.130 tea-cluster

1. Connect to the Kubernetes cluster.

    kubectl config use-context CLUSTER-NAME

1. Get cluster nodes.

    kubectl get nodes

##<a id='home'></a> NSX-T Installation Instructions Home

<a href="./nsxt-install-config-steps.html">Installing and Configuring NSX-T for <%= vars.product_short %></a>.
