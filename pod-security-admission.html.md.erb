---
title: Pod Security Admission in Tanzu Kubernetes Grid Integrated Edition
owner: TKGI
---

This topic describes how to use Kubernetes Pod Security Admission (PSA) with VMware Tanzu Kubernetes Grid Integrated Edition (TKGI).  

> **Note** Support for Kubernetes Pod Security Policy (PSP) has been removed in Kubernetes v1.25.  

##<a id='psa-about'></a> About Pod Security Admission

PSA is the Kubernetes-recommended way to implement security standards. TKGI supports the built-in PSA in Kubernetes. 
PSA is enabled in TKGI, by default.  

In TKGI, you can configure PSA in a cluster or in a custom namespace. 

For more information on PSA, see [Pod Security Admission](https://kubernetes.io/docs/concepts/security/pod-security-admission/) 
in the Kubernetes documentation.  

##<a id='psa-cluster'></a> Pod Security Admission in a TKGI Cluster

You can configure cluster-specific PSA in TKGI by using a Kubernetes profile.

1. Create the `psa-cluster` yaml file containing the following information:

    ```
    apiVersion: apiserver.config.k8s.io/v1
    kind: AdmissionConfiguration
    plugins:
    - name: PodSecurity
      configuration:
        apiVersion: pod-security.admission.config.k8s.io/v1
        kind: PodSecurityConfiguration
        defaults:
          enforce: ENFORCE-LEVEL
          enforce-version: "ENFORCE-VERSION"
          audit: AUDIT-LEVEL
          audit-version: "AUDIT-VERSION"
          warn: WARN-LEVEL
          warn-version: "WARN-VERSION"
        exemptions:
          usernames: []
          runtimeClasses: []
          namespaces: [kube-system,pks-system,nsx-system,vmware-system-csi,CUSTOM-NAMESPACES]
    ```
    
    Where:  
    
    - `ENFORCE-LEVEL` is the level for enforcing the security policy. Use a level that is accepted by Kubernetes, for example, `privileged`, `baseline`, or `restricted`.
    - `ENFORCE-VERSION` is the version for enforcing the security policy. VMware strongly recommends using `latest` for the enforce version.
    - `AUDIT-LEVEL` is the level for auditing a possible security policy violation. Use a level that is accepted by Kubernetes, for example, `privileged`, `baseline`, or `restricted`.
    - `AUDIT-VERSION` is the version for auditing a possible security policy violation. VMware strongly recommends using `latest` for the audit version.
    - `WARN-LEVEL` is the level for triggering a warning for a security policy violation. Use a level that is accepted by Kubernetes, for example, `privileged`, `baseline`, or `restricted`.
    - `WARN-VERSION` is the version for the warning that is triggered for a security policy violation. VMware strongly recommends using `latest` for the warn version.
    - `CUSTOM-NAMESPACES` is the TKGI custom namespaces that you want to exclude.

    <p class="note"><strong>Note</strong>: If you had configured any experimental admission control features by using a Kubernetes profile in the previous version 
    of TKGI, you must append it under the `plugin` field in the `psa-cluster` yaml file.
    </p>

1. Create the `config-psa-custom` json file containing the following information:

    ```
    {
      "name":"psa-cluster-file",
      "description":"PROFILE-DESCRIPTION",
      "customizations":[
          {
              "component":"kube-apiserver",
              "file-arguments":{
                  "admission-control-config-file":"FILE-PATH"
              }
          }
      ]
    }
    ```
    Where:
    
    - `DESCRIPTION` is the decsription for your Kubernetes profile.
    - `FILE-PATH` is the path to the `psa-cluster.yaml` file.

1. Assign the profile to the cluster. For more iformation, see [Assign a Kubernetes Profile to an Existing Cluster](k8s-profiles.html#update).
  
For more information about configuring and using Kubernetes Profiles with TKGI, see [Using Kubernetes Profiles](k8s-profiles.html).
  
For more information about configuring cluster-level PSA, see [Enforce Pod Security Standards by Configuring the Built-in Admission Controller](https://kubernetes.io/docs/tasks/configure-pod-container/enforce-standards-admission-controller/#configure-the-admission-controller) 
in the Kubernetes documentation.

##<a id='psa-interaction'></a> Pod Security Admission in TKGI System Namespaces

To allow for different customer scenarios and requirements, TKGI does not set default PSA policies for TKGI system namespaces.

To ensure system integrity, <%= vars.recommended_by %> recommends securing TKGI system namespaces with PSA policies that are based on the PSA levels listed in the table below.

> **Note** To control the PSA security permissions in a TKGI namespace, you must have the privileges to create, update, or patch the namespace.
To ensure security of the system, restrict namespace permissions to trusted user accounts.

The following table lists recommended PSA levels for TKGI system namespaces:

<table>
  <tr>
    <th>TKGI System Namespace</th>
    <th>PSA Level</th>
  </tr>
  <tr>
    <td>kube-system</td>
    <td>Privileged</td>
  </tr>
  <tr>
    <td>nsx-system</td>
    <td>Restricted</td>
  </tr>
  <tr>
    <td>pks-system</td>
    <td>Privileged</td>
  </tr>
  <tr>
    <td>pks-system-host-monitoring</td>
    <td>Restricted</td>
  </tr>
  <tr>
    <td>vmware-system-csi</td>
    <td>Baseline</td>
  </tr>
</table>

Customer-defined PSA policies do not change during TKGI cluster upgrade.

The guide [Enforce Pod Security Standards with Namespace Labels](https://kubernetes.io/docs/tasks/configure-pod-container/enforce-standards-namespace-labels/) in the Kubernetes documentation explains how to set PSA polices for namespaces.
For example, to enforce the recommended PSA levels for TKGI system namespaces as listed above, run:

  ```
  kubectl label ns kube-system pod-security.kubernetes.io/enforce=privileged
  kubectl label ns nsx-system  pod-security.kubernetes.io/enforce=restricted
  kubectl label ns pks-system  pod-security.kubernetes.io/enforce=privileged
  kubectl label ns pks-system-host-monitoring  pod-security.kubernetes.io/enforce=restricted
  kubectl label ns vmware-system-csi  pod-security.kubernetes.io/enforce=baseline
  ```


##<a id='psa-migration'></a> Migrate from PSP to PSA Controller

To migrate from PSP to PSA Controller, see [Migrate from PodSecurityPolicy to the Built-In PodSecurity Admission Controller](https://kubernetes.io/docs/tasks/configure-pod-container/migrate-from-psp) in the Kubernetes documentation.
