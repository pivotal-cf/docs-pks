---
title: Using Dynamic PersistentVolumes
owner: PKS
---

<strong><%= modified_date %></strong>

When using PKS, you can choose to pre-provision persistent storage or create on-demand PersistentVolumes (PVs).
Refer to the [Kubernetes documentation](https://kubernetes.io/docs/concepts/storage/persistent-volumes/) for more information about storage management.

Perform the steps in this section to define a PersistentVolumeClaim (PVC) that you can apply to newly-created pods.

1. Download the StorageClass spec for your cloud provider.
  * **GCP**: <pre class="terminal">$ wget https&#58;//raw.githubusercontent.com/cloudfoundry-incubator/kubo-ci/master/specs/storage-class-gcp.yml</pre>
  * **vSphere**: <pre class="terminal">$ wget https&#58;//raw.githubusercontent.com/cloudfoundry-incubator/kubo-ci/master/specs/storage-class-vsphere.yml</pre>
  * **AWS**: <pre class="terminal">$ wget https&#58;//raw.githubusercontent.com/cloudfoundry-incubator/kubo-ci/master/specs/storage-class-aws.yml</pre>

1. Edit the spec (if necessary).
In some cases you may need to edit the default storage class to ensure that the correct storage class is created. 

For example, the default `storage-class-vsphere.yml` file is as follows:

```yaml
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ci-storage
provisioner: kubernetes.io/vsphere-volume
parameters:
  diskformat: zeroedthick
```

To ensure that the correct storage class is created, make it explicit: 

```yaml
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: thin
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: kubernetes.io/vsphere-volume
parameters:
    diskformat: thin
```

1. Apply the spec by running `kubectl create -f STORAGE-CLASS-SPEC.yml`.
Replace `STORAGE-CLASS-SPEC` with the name of the file you downloaded in the previous step.
For example:
<pre class="terminal">$ kubectl create -f storage-class-gcp.yml</pre>

1. Run the following command to download the example PVC:
<pre class="terminal">$ wget https&#58;//raw.githubusercontent.com/cloudfoundry-incubator/kubo-ci/master/specs/persistent-volume-claim.yml
</pre>

1. Run the following command to apply the PVC:
<pre class="terminal">
$ kubectl create -f persistent-volume-claim.yml
</pre>
  * To confirm you applied the PVC, run the following command:
  <pre class="terminal">
  $ kubectl get pvc -o wide
  </pre>

1. To use the dynamic PV, create a pod that uses the PVC.
See the [pv-guestbook.yml configuration file](https://github.com/cloudfoundry-incubator/kubo-ci/blob/master/specs/pv-guestbook.yml) as an example.
