---
title: Firewall Ports and Protocols Requirements for Tanzu Kubernetes Grid Integrated Edition Management Console
owner: TKGI
---


This topic describes how to secure the environment for <%= vars.product_full %> Management Console (<%= vars.k8s_runtime_abbr %> MC) and <%= vars.ops_manager_full %> (<%= vars.ops_manager %>).  


<br>
<br>
## <a id='overview'></a>Overview

Apps frequently require the ability to pass internal communication between system components on different networks and require one or more conduits through the environment's firewalls.  

To configure security for your <%= vars.k8s_runtime_abbr %> MC environment, see [Configure Security and Ports for <%= vars.k8s_runtime_abbr %> and <%= vars.ops_manager %>](#configure-security) below.  

<br>
<br>
## <a id='configure-security'></a>Configure Security and Ports for <%= vars.k8s_runtime_abbr %> and <%= vars.ops_manager %>

Firewall rules are typically used to provide apps the ability to pass internal communication between system components on different networks and require one or more conduits through the environment's firewalls. Firewall rules are also used to enable interfacing with external systems such as with enterprise apps or apps and data on the public Internet.  

To configure security and ports for a  <%= vars.k8s_runtime_abbr %> MC environment on vSphere:  

1. <%= vars.recommended_by %> recommends you deactivate security policies that filter traffic between the networks supporting the system.  

1. Use one of the following methods to secure the environment and grant access between <%= vars.k8s_runtime_abbr %> system components:  

    * Enable access to apps through standard Kubernetes load-balancers and ingress
controller types. This enables you to designate specific ports and protocols as a firewall conduit.  
    * Enable access using the NSX load balancer and ingress. This enables you to configure external addresses and ports that are automatically mapped and resolved to internal/local addresses and ports.  
    * Manually [Configure Ports for <%= vars.k8s_runtime_abbr %> and <%= vars.ops_manager %>](#configure-ports).  

<br>
### <a id='configure-ports'></a>Configure Ports for <%= vars.k8s_runtime_abbr %> and <%= vars.ops_manager %>

In a standard <%= vars.k8s_runtime_abbr %> deployment, it is assumed that <%= vars.ops_manager %> and BOSH are already deployed before you deploy <%= vars.k8s_runtime_abbr %>.  

This is not the case with <%= vars.k8s_runtime_abbr %> MC deployments in which you do not know the IP addresses in the deployment network that will be assigned to <%= vars.control_plane %> VM, BOSH VM, and <%= vars.ops_manager %> VM.  

<%= vars.recommended_by %> recommends you create a firewall rule that allows access by the <%= vars.k8s_runtime_abbr %> MC VM to the entire deployment subnet.  

 The following table identifies the flows between the system components in an <%= vars.k8s_runtime_abbr %> MC environment:  

| Source Component | Destination Component | Destination Protocol | Destination Port | Service |
| --- | --- | --- | --- | --- |
| Management Console VM | All System Components | TCP | 22 | SSH |
| Management Console VM | All System Components | TCP | 80 | http |
| Management Console VM | All System Components | TCP | 443 | https |
| Management Console VM | Cloud Foundry BOSH Director | TCP | 25555 | bosh director rest api |
| Management Console VM | DNS validation for Ops Manager | TCP | 53 | netcat |
| Management Console VM | Kubernetes Cluster API Server - LB VIP | TCP | 8443 | httpsca |
| Management Console VM | Pivotal Cloud Foundry Operations Manager | TCP | 22 | SSH |
| Management Console VM | Pivotal Cloud Foundry Operations Manager | TCP | 443 | https |
| Management Console VM | <%= vars.k8s_runtime_abbr %> Controller | TCP | 9021 | tkgi api server |
| Management Console VM | vCenter Server | TCP | 443 | https |

The **Source Component** is the IP address of the <%= vars.k8s_runtime_abbr %> Management Console VM. 