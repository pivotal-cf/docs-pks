---
title: Tanzu Kubernetes Grid Integrated Edition Certificates
owner: TKGI
---

This topic summarizes <%= vars.product_short %> (<%= vars.k8s_runtime_abbr %>) certificates
and how to rotate them.

## <a id="overview"></a>Overview of <%= vars.k8s_runtime_abbr %> Certificates

<%= vars.k8s_runtime_abbr %> secures all communication between <%= vars.k8s_runtime_abbr %> control plane components and <%= vars.k8s_runtime_abbr %>-managed Kubernetes clusters
using Transport Layer Security (TLS) validated by RSA Certificate Authority (CA) certificates and leaf certificates that they issue:  

* **<%= vars.k8s_runtime_abbr %> Control Plane Certificates**  

    <%= vars.k8s_runtime_abbr %> Control Plane Certificates are the certificates used by the TKGI API server and TKGI DB server 
    to secure <%= vars.k8s_runtime_abbr %> Control Plane component communication.  

    * **User-Configurable Certificates**  
    
        The user-configurable leaf certificates used by <%= vars.k8s_runtime_abbr %> are:  

        * The <%= vars.k8s_runtime_abbr %> API Service certificate: <%= vars.k8s_runtime_abbr %> uses the <%= vars.k8s_runtime_abbr %> API Service certificate 
        to secure access to the <%= vars.k8s_runtime_abbr %> API endpoint.  
        * The NSX-T SuperUser certificate: <%= vars.k8s_runtime_abbr %> uses the NSX-T SuperUser certificate to secure access to the NSX-T manager.  
        
        User-configurable certificates must be manually updated.  

* **TKGI Kubernetes Cluster Certificates**  

    TKGI Kubernetes Cluster certificates, used by Kubernetes clusters, 
    are unique to each Kubernetes cluster created by <%= vars.k8s_runtime_abbr %>.  

    For more information, see [<%= vars.k8s_runtime_abbr %>-Provisioned Kubernetes Cluster Certificates](#cluster-ca) below.  
    
* **BOSH Certificates used by <%= vars.k8s_runtime_abbr %>**  

    The certificates used by <%= vars.k8s_runtime_abbr %> also include some of the certificates managed by BOSH, such as the BOSH DNS certificate.  

For more information about certificates, see [Certificate Types](https://docs.pivotal.io/ops-manager/security/pcf-infrastructure/certificate-types.html) 
in the Ops Manager documentation.  

The certificates used by <%= vars.k8s_runtime_abbr %> automatically expire and must be rotated. For more information about rotating <%= vars.k8s_runtime_abbr %> certificates, see 
[Rotating Certificates](#rotate) below.  


## <a id="check-expiration"></a>Check Certificate Expiration Dates

Before rotating <%= vars.k8s_runtime_abbr %> certificates you should determine which certificates are approaching expiration.  

To review certificate expiration dates:  

* Review certificate expiration dates using Ops Manager. 
    To see certificate expiration dates, open the Ops Manager and select the **Certificates** tab.  
* Use CredHub to export the certificate expiration dates for the <%= vars.k8s_runtime_abbr %> deployment or one or more clusters. 
For more information, see 
[How to get the expiry dates of all CA's & certificates in the PKS deployment and clusters](https://community.pivotal.io/s/article/How-to-get-expiry-date-of-all-CA-s-certificates-in-PKS-deployment-and-clusters) 
in the VMware Tanzu Knowledge Base.  
* Use the <%= vars.k8s_runtime_abbr %> CLI to export the certificate expiration dates for Kubernetes cluster certificates. 
For more information, see [List TLS Certificates](https://docs.pivotal.io/tkgi/1-12/rotate-cluster-certificates.html#certs-list) 
in _Rotate Kubernetes Cluster Certificates_.  





## <a id="rotate"></a>Rotating Certificates

The following is an overview of the rotation requirements for the various <%= vars.k8s_runtime_abbr %> certificate types:  

* **<%= vars.k8s_runtime_abbr %> Control Plane Certificates**  

    <%= vars.k8s_runtime_abbr %> control plane certificates, and their leaf certificates, are automatically generated by <%= vars.k8s_runtime_abbr %>:  

    * `pxc_server_ca`  
    * `pxc_galera_ca`  
    * `uaa_active_pks_saml_key_2018`  
    * `kubo_odb_ca_2018`  
    
    Control plane certificates have a default expiration period of four years 
    and normally do not require manual rotation because they are rotated automatically during <%= vars.k8s_runtime_abbr %> tile upgrades.  

    For more information about rotating control plane certificates certificates, 
    see [Rotate <%= vars.k8s_runtime_abbr %> Control Plane Certificates](rotate-tile-certificates.html#control) 
    or [How to rotate TKGI control plane CA and leaf certificates](https://kb.vmware.com/s/article/88309) in the VMware Tanzu Knowledge Base.  
    
    * **User-Configurable <%= vars.k8s_runtime_abbr %> Certificates**  
    
        <%= vars.k8s_runtime_abbr %> user-configurable <%= vars.k8s_runtime_abbr %> certificates must be configured by <%= vars.k8s_runtime_abbr %> administrators:  
        
        * `pks_tls`  
        * `nsx-t-superuser-certificate`  
        
        User-configurable <%= vars.k8s_runtime_abbr %> certificates have an admin-defined expiration period.  
        
        To rotate the `pks_tls` certificate, open the <%= vars.k8s_runtime_abbr %> API tab on the <%= vars.k8s_runtime_abbr %> tile.  
        
        The `nsx-t-superuser-certificate` certificate is an NSX-T-only certificate that must be registered with the NSX Manager after rotation. 
        To rotate the `nsx-t-superuser-certificate` certificate, see 
        [Rotate the Principal Identity Certificate and Key](nsxt-generate-pi-cert.html#certificates-nsx-pid-rotate) 
        in _Generating and Registering the NSX Manager Superuser Principal Identity Certificate and Key_ 
        or [How to renew the nsx-t-superuser-certificate used by Principal Identity user](https://kb.vmware.com/s/article/80355) in the VMware Tanzu Knowledge Base.  


* **TKGI Kubernetes Cluster Certificates**  

    <%= vars.k8s_runtime_abbr %> Kubernetes cluster certificates, and their leaf certificates, are automatically generated by <%= vars.k8s_runtime_abbr %>:  

    * `kubo_master_ca_2021`  
    * `kubo_ca_2018`  
    * `etcd_ca_2018`  
    
    Kubernetes cluster certificates have a default expiration period of four years.  
    
    To rotate these certificates, see [Rotate Kubernetes Cluster Certificates](rotate-cluster-certificates.html).  
    
    * **NSX-T-Only TKGI Kubernetes Cluster Certificates**  
    
        NSX-T-only <%= vars.k8s_runtime_abbr %> Kubernetes cluster certificates are automatically generated by <%= vars.k8s_runtime_abbr %>:  
        
        * `tls-nsx-t`  
        * `tls-nsx-lb`  
    
        The `tls-nsx-t` certificate has a default expiration period of two years and the `tls-nsx-lb` certificate has a default expiration period of five years.  
        
        To rotate these certificates, see [Rotate NSX-T Certificates Only](rotate-cluster-certificates.html#rotate-only-nsx) 
        in _Rotate Kubernetes Cluster Certificates_.  

* **BOSH Certificates used by <%= vars.k8s_runtime_abbr %>**  

    The BOSH certificates used by <%= vars.k8s_runtime_abbr %>, are generated by BOSH:  
    
    * `bosh_dns_health_client_tls`  
    * `bosh_dns_health_server_tls`  
    * `dns_api_client_tls`  
    * `dns_api_server_tls`  

    The BOSH certificates used by <%= vars.k8s_runtime_abbr %> have a default expiration period of one year. 
    To extend the default expiration period, see [Overriding Duration for Certificates](https://docs.pivotal.io/ops-manager/2-10/security/pcf-infrastructure/configure-certificate-duration-overrides.html) 
    in the Ops Manager documentation.  

    To rotate the BOSH certificates used by <%= vars.k8s_runtime_abbr %>, 
    see [How to rotate bosh-dns certificates in TKGI 1.9+ using maestro](https://kb.vmware.com/s/article/88187) 
    in the VMware Tanzu Knowledge Base.  
    
    <p class="note warning"><strong>Warning:</strong>
    Never use the CredHub Maestro <code>maestro regenerate ca/leaf --all</code> command to rotate <%= vars.k8s_runtime_abbr %> certificates.
    </p>
  

##<a id='cluster-ca'></a><%= vars.k8s_runtime_abbr %>-Provisioned Kubernetes Cluster Certificates

<%= vars.k8s_runtime_abbr %> supports a per-cluster CA for Kubernetes clusters. 
Kubernetes clusters provisioned by <%= vars.k8s_runtime_abbr %> no longer use a shared CA.  

When <%= vars.k8s_runtime_abbr %> provisions a Kubernetes cluster, the system generates 
CA certificates and leaf certificates that have values and 
expiration dates unique to that cluster.  

<%= vars.k8s_runtime_abbr %> manages the lifecycle of the per-cluster CA and the certificates it signs.  

There is no action required to use the new per-cluster CA.

### <a id="cluster-certs"></a>Kubernetes Cluster Certificates

A <%= vars.k8s_runtime_abbr %>-provisioned Kubernetes cluster includes CA certificates and their leaf certificates:  

<img src="images/cluster-certs.png">


The following CA and leaf certificates are used by all <%= vars.k8s_runtime_abbr %>-provisioned Kubernetes clusters:  

-  `kubo_ca_2018`:
  - `tls-kubelet-2018`
  - `tls-metrics-server-2018`
  - `tls-kubelet-client-2018`
  - `tls-kube-controller-manager-2018`

- `etcd_ca_2018`:
  - `tls-etcd-2018-2`
  - `tls-etcdctl-2018-2`
  - `tls-etcdctl-root-2018-2`  
  - `tls-etcdctl-flanneld-2018-2`  

- `kubo_master_ca_2021`
  - `tls-kubernetes-2018`
  - `tls-ncp-2018 (with NSX-T)`
  - `tls-nsx-kube-proxy-2018 (with NSX-T)`  
  
The following certificates are used for NSX-T only:  

- `tls-nsx-lb`  
- `tls-nsx-t`  

<br>
    The NSX-T only certificates must be registered with NSX Manager.  


