---
title: Using Helm with Tanzu Kubernetes Grid Integrated Edition
owner: TKGI
---

This topic describes how to install the Helm package manager
on <%= vars.product_short %> (<%= vars.k8s_runtime_abbr %>),
and how to use Helm to install software to Kubernetes clusters deployed by <%= vars.k8s_runtime_abbr %>.


##<a id='overview'></a> Overview

Helm is a package manager you can use to deploy <%= vars.k8s_runtime_abbr %> components, such as Wavefront,
and your <%= vars.k8s_runtime_abbr %> Kubernetes apps.

Helm includes the following components:

<table>
  <tr>
    <th>Component</th>
    <th>Role</th>
    <th>Location</th>
  </tr>
  <tr>
    <td><code>helm</code></td>
    <td>Client</td>
    <td>Runs on your local workstation</td>
  </tr>
  <tr>
    <td><code>tiller</code></td>
    <td>Server</td>
    <td>(Helm 2 only) Runs inside your Kubernetes cluster</td>
  </tr>
</table>
<br>
To install Helm, see [Install and Configure Helm](#install-helm).  

To use Helm to deploy components or your apps to <%= vars.k8s_runtime_abbr %> clusters, 
see [Deploy Apps and Components Using Helm](#deploy-using-helm).  


##<a id='install-helm'></a> Install and Configure Helm

You can use either [Helm 3](https://helm.sh/)
or its predecessor [Helm 2](https://v2.helm.sh/) as your <%= vars.k8s_runtime_abbr %> Helm package manager. 
Helm 3 is more easily installed than Helm 2 and requires less configuration.  

To install and configure Helm 3 for <%= vars.k8s_runtime_abbr %>, see 
[Install and Configure Helm 3](#helm-3) below. 
To install Helm 2, see [Install and Configure Helm 2](#helm-2) below.  


###<a id='helm-3'></a> Install and Configure Helm 3

To install and configure Helm 3, follow the [Step 1: Install And Configure Helm](
https://docs.bitnami.com/kubernetes/get-started-charts-pks/#step-1-install-and-configure-helm) instructions in the Bitnami <%= vars.k8s_runtime_abbr %> documentation.

###<a id='helm-2'></a> Install and Configure Helm 2

To use Helm 2 with <%= vars.k8s_runtime_abbr %>, you must first configure the Tiller component to give it access to the Kubernetes API.
Tiller runs inside the Kubernetes cluster.

To grant API access to Tiller and install Helm 2: 

1. Create a role-based access control (RBAC) configuration file named `rbac-config.yaml` that contains the following:

    ```yaml
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: tiller
      namespace: kube-system
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: tiller
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: cluster-admin
    subjects:
      - kind: ServiceAccount
        name: tiller
        namespace: kube-system
    ```
    
1. Create the service account and role by running the following command:
  
    ```
    kubectl create -f rbac-config.yaml
    ```

1. Download and install the latest v2 patch release of the [Helm CLI](https://github.com/kubernetes/helm/releases).

1. Deploy Helm 2 using the service account by running the following command:
    
    ```
    helm init --service-account tiller
    ```

1. Verify that the permissions are configured by running the following command: 
      
    ```
    helm ls
    ``` 
    There should be no output from the above command.

To apply more granular permissions to the Tiller service account, see the [Helm RBAC](https://github.com/kubernetes/helm/blob/master/docs/rbac.md) documentation.

For more information about securing Helm 2, see the Bitnami article [Exploring the Security of Helm](https://engineering.bitnami.com/articles/helm-security.html).


##<a id='deploy-using-helm'></a> Deploy Components and Apps Using Helm

You can use Helm to deploy third-party components or your own apps to <%= vars.k8s_runtime_abbr %> clusters.

###<a id='helm-artifacthub'></a> Deploy Apps Listed in Artifact HUB

To deploy a third-party component on Artifact HUB to a <%= vars.k8s_runtime_abbr %> cluster:  

1. Download the component's Helm chart from the official repositories in the 
[Artifact HUB](https://artifacthub.io/packages/search?page=1&official=true). 

1. Complete the deployment instructions for the component.   

For specific instructions on deploying Wavefront, which you may need to do for Windows worker-based clusters,
see the [Wavefront](windows-monitoring.html#wavefront) section of the _Monitoring Windows Worker Clusters and Nodes_ topic.

###<a id='helm-diy'></a> Deploy Your Own Apps

To deploy your app to a <%= vars.k8s_runtime_abbr %> cluster using Helm:

1. Package the app as a _Helm chart_, the package format that the `helm install` command uses.
  - For example Helm charts, see [Concourse Helm Chart](https://github.com/concourse/concourse-chart), [DataDog Helm Chart](https://github.com/DataDog/helm-charts), or the charts archived in [Helm Charts](https://github.com/kubernetes/charts) on GitHub.
  - For information on how to create a Helm chart for your app, see 
[Charts](https://docs.helm.sh/developing_charts/) in the Helm documentation.  

1. Run the `helm install` command, passing in the location of your chart.
For more information, see the [Helm Docs](https://helm.sh/docs/helm/helm_install/).
