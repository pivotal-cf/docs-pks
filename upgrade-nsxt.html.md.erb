---
title: Upgrading Tanzu Kubernetes Grid Integrated Edition (VMware NSX Networking)
owner: TKGI
---

This topic describes how to upgrade <%= vars.product_full %> (<%= vars.k8s_runtime_abbr %>)
from <%= vars.product_version_prev %> to <%= vars.product_version %>
on vSphere with NSX networking.  

For instructions on upgrading <%= vars.k8s_runtime_abbr %>
with Flannel networking,
see [Upgrading <%= vars.product_short %> (Antrea and Flannel Networking)](upgrade.html).

<p class="note warning"><strong>Warning:</strong> Do not manually upgrade your Kubernetes version.
<%= vars.k8s_runtime_abbr %> includes the compatible Kubernetes version.
</p>

## <a id="overview"></a>Overview

Before you upgrade, follow the procedures in [Prepare to Upgrade](#prepare) below
to plan and prepare your upgrade.

After you complete the preparation steps,
continue to the procedures in [Perform the Upgrade](#upgrade) below.
These steps guide you through the process of upgrading <%= vars.ops_manager_full %> (<%= vars.ops_manager %>) and the <%= vars.k8s_runtime_abbr
 %> tile,
importing a new stemcell, and applying the changes to your deployment.

After you complete the upgrade, follow the procedures
in [After the Upgrade](#after-upgrade) below
to verify that your upgraded <%= vars.k8s_runtime_abbr %> deployment is running properly
and to optionally upgrade NSX and vSphere.

## <a id="prerequisites"></a>Prerequisites

To see a list of NSX versions compatible with <%= vars.k8s_runtime_abbr %> <%= vars.product_version %>,
consult [Product Snapshot](release-notes.html) in _Release Notes_ for <%= vars.k8s_runtime_abbr %> <%= vars.product_version %>.

## <a id="prepare"></a>Prepare to Upgrade

To prepare for upgrading <%= vars.product_short %> 
from <%= vars.k8s_runtime_abbr %> <%= vars.product_version_prev %> to <%= vars.k8s_runtime_abbr %> <%= vars.product_version %>:  

* Complete all of the steps in
[Upgrade Preparation Checklist for <%= vars.product_short %>](checklist.html).  
* Review the upgrade procedures in [Upgrade Order for <%= vars.product_short %> Environments on vSphere](upgrade-scenarios.html).  

## <a id="upgrade"></a>Perform the Upgrade

This section describes the steps required to upgrade to <%= vars.k8s_runtime_abbr %> <%= vars.product_version %>:

1. [Upgrade NSX](#upgrade-nsxt)
1. [Upgrade <%= vars.ops_manager %>](#upgrade-opsman)
1. [Download and Import <%= vars.k8s_runtime_abbr %> <%= vars.product_version %>](#stage-tkgi)
1. [Download and Import Stemcells](#stemcell)
1. [Upgrade the <%= vars.k8s_runtime_abbr %> Tile](#upgrade-tkgi)

### <a id="upgrade-nsxt"></a>Upgrade NSX

<%= vars.product_short %> <%= vars.product_version %> supports running on NSX-T Data Center v3.2.3 or later and NSX v4.0 or later.

You cannot upgrade directly from NSX-T v3.2.2 and earlier to NSX v4.0+, but you can upgrade stepwise by following the supported upgrade paths listed in the NSX-T and NSX upgrade documentation linked below.

<p class='note'><strong>Note</strong>: For v4.0+, VMware NSX-T Data Center is renamed to "VMware NSX."</p>

#### Upgrade to NSX-T v3.2.3 or Later

To upgrade NSX to NSX-T v3.2.3 or later:  

1. Confirm that you are upgrading NSX to a version compatible with
<%= vars.k8s_runtime_abbr %> <%= vars.product_version %>. 
For a list of NSX versions compatible with
<%= vars.k8s_runtime_abbr %> <%= vars.product_version %>,
see [Product Snapshot](release-notes.html) in _Release Notes_ for
<%= vars.k8s_runtime_abbr %> <%= vars.product_version %>.
  <p class="note warning">
  <strong>Warning:</strong> Refer to the <a href="release-notes.html">Release Notes</a> for current version support, known issues, and other important information.</p>
<% if vars.product_version == "COMMENTED"  %>
<%#
1. Confirm that you have upgraded all <  %= vars.k8s_runtime_abbr 
% >-provisioned Kubernetes clusters to TKGI <  %= vars.product_version_prev %  > using **Upgrade all clusters errand** in <%= vars.ops_manager %> or using the <  %= vars.k8s_runtime_abbr 
% > CLI.

    <p class="note"><strong>Note:</strong> This updates your Kubernetes clusters to the version of Kubernetes and version of NCP that are included with <  %= vars.k8s_runtime_abbr 
      % > <  %= vars.product_version_prev %  >.</p>

1. Note the current DRS mode setting, then change DRS mode to **Manual**. 
For more information, 
see [Pods Stop After Upgrading From NSX-T v3.0.2 to v3.1.0](release-notes.html#1-10-0-nsxt-302-310)
in the <  %= vars.product_short %  > _Release Notes_.
%>
<% end %>

1. Confirm that your vSphere installation is on the supported version and patch for NSX.
  1. Refer to the [VMware Product Interoperability Matrices](https://www.vmware.com/resources/compatibility/sim/interop_matrix.php#interop&175=&1=).
  1. If necessary, upgrade to the required vSphere version or patch before proceeding with the upgrade of NSX.

1. Upload the NSX upgrade bundle using the NSX Manager and proceed with the upgrade process by following the instructions in the UI.

    <img src="images/nsxt/nsxt-30/upgrade-09.png" alt="The NSX Manager Upgrade tab with Upgrade From remote Location selected.">

    For more information, refer to the [Upgrading VMware NSX](https://docs.vmware.com/en/VMware-NSX-T-Data-Center/3.2/upgrade/GUID-E04242D7-EF09-4601-8906-3FA77FBB06BD.html) documentation.

<% if vars.product_version == "COMMENTED"  %>
1. If you set DRS mode to **Manual** above, restore DRS to its original setting.
<% end %>
1. If you made architectural changes to your NSX environment that affect <%= vars.k8s_runtime_abbr %>,
such as adding or changing a [VIP address](./nsxt-3-0-install.html#nsxt30-t0-router-config), or
a [load balancer](./nsxt-3-0-install.html#nsxt30-edge-nodes) for the NSX Management Cluster,
update the BOSH Director and <%= vars.k8s_runtime_abbr %> tiles with the new or updated IP addresses:
  1. In the BOSH Director tile > **vCenter Configuration** pane, update **NSX Address** and **NSX CA Cert**.
  1. In the <%= vars.k8s_runtime_abbr %> tile > **Networking** pane, update **NSX Manager hostname** and **NSX Manager CA Cert**.
  1. After making changes to the BOSH Director or <%= vars.k8s_runtime_abbr %> tiles:
      1. On the **Installation Dashboard** in <%= vars.ops_manager %>,
      click **Review Pending Changes**.
      1. Expand the **Errands** list for <%= vars.k8s_runtime_abbr %>.
      1. Ensure that the **Upgrade all clusters errand** is selected.
      1. Click **Apply Changes**.

#### <a id="upgrade-nsx"></a>Upgrade NSX-T v3.2 to NSX v4.0 or Later

To upgrade an NSX-T v3.2 deployment to NSX v4.0 or later:

1. If your NSX-T v3.2 deployment uses an N-VDS host switch, as described in [NSX Virtual Distributed Switch](https://docs.vmware.com/en/VMware-NSX-T-Data-Center/3.2/administration/GUID-A075811A-03EC-4F79-A9F1-1F1CF52722DB.html), you need to migrate your host switch to vSphere Distributed Switch (VDS) before you can upgrade to NSX v4.0 or later.

  - To migrate the host switch, see [Migrate Host Switch to vSphere Distributed Switch](https://docs.vmware.com/en/VMware-NSX-T-Data-Center/3.2/administration/GUID-1039A36F-F55E-4A0A-B6C6-2C383F4A716D.html) in the _VMware NSX-T Data Center Documentation_.
  - For more information, see [Feature Deprecation](https://docs.vmware.com/en/VMware-NSX/4.0/rn/vmware-nsx-4001-release-notes/index.html#feature-deprecation) in the _VMware NSX 4.0.0.1 Release Notes_.

1. Upgrade to NSX as described in the [NSX Upgrade Guide](https://docs.vmware.com/en/VMware-NSX/4.0/upgrade/GUID-E04242D7-EF09-4601-8906-3FA77FBB06BD.html).

### <a id="upgrade-opsman"></a>Upgrade <%= vars.ops_manager %>

Each version of <%= vars.k8s_runtime_abbr %> is compatible with multiple versions of <%= vars.ops_manager %>.
See [<%= vars.product_network %>](https://network.pivotal.io/products/pivotal-container-service)
to determine if your <%= vars.ops_manager %> version is compatible with <%= vars.k8s_runtime_abbr %> <%= vars.product_version %>.

<p class="note warning"><strong>Warning:</strong> If you use an automated pipeline to upgrade <%= vars.k8s_runtime_abbr %>, 
see <a href="upgrade-pipeline.html#configure-pipeline">Configure Automated <%= vars.ops_manager %> and Ubuntu Jammy Stemcell for Tanzu Downloading</a> in <em>Configuring the Upgrade Pipeline</em>.  
</p> 

To upgrade <%= vars.ops_manager %>:

1. Log in to <%= vars.ops_manager %>.

1. Click your user name in the top right corner and navigate to **Settings** > **Export Installation Settings**.

1. Click **Export Installation Settings**.
  - <%= vars.ops_manager %> exports an encrypted archive of your current installation configuration.
  - Later, you import this configuration into to your upgraded <%= vars.ops_manager %>.
  <img src="images/nsxt/nsxt-30/upgrade-01.png" alt="The <%= vars.ops_manager %> Export Installation Settings tab showing there is only one option: the Export Installation Settings button.">

1. Log in to vCenter Server using the vSphere Client.

1. Shut down the <%= vars.ops_manager %> VM.

1. Deploy the upgraded <%= vars.ops_manager %> VM by following the first two steps of [Deploying <%= vars.ops_manager %> with NSX for <%= vars.k8s_runtime_abbr %>](vsphere-nsxt-om-deploy.html):
  1. [Step 1: Generate SSH Key Pair](vsphere-nsxt-om-deploy.html#ssh-key)
  1. [Step 2: Deploy <%= vars.ops_manager %> for <%= vars.product_short %>](vsphere-nsxt-om-deploy.html#deploy-om)

1. Using a browser, navigate to the newly-deployed <%= vars.ops_manager %> web interface.

1. On the welcome page, select **Import Existing Installation**.
  <img src="images/nsxt/nsxt-30/upgrade-02.png" alt="The <%= vars.ops_manager %> Welcome page showing Authentication System options and the Import Existing Installation button.">

1. Browse to and select the installation configuration archive you exported.

1. Log in to <%= vars.ops_manager %>

1. Click **Apply Changes**.
  <img src="images/nsxt/nsxt-30/upgrade-03.png" alt="The <%= vars.ops_manager %> Review Pending Changes page, with options to select which product updates to apply, and the Apply Changes button.">

1. Verify that the BOSH Director for vSphere tile shows the upgrade version.
  <img src="images/nsxt/nsxt-30/upgrade-04.png" alt="The <%= vars.ops_manager %> Installation Dashboard page with the BOSH Director and tiles.">

### <a id="stage-tkgi"></a> Download and Import <%= vars.k8s_runtime_abbr %> <%= vars.product_version %>

When you upgrade <%= vars.k8s_runtime_abbr %>,
your configuration settings typically migrate to the new version automatically.
To download and import a <%= vars.k8s_runtime_abbr %> version:

1. Download the target version of the product
from [<%= vars.product_network %>](https://network.pivotal.io/products/pivotal-container-service/).

1. Import the target version of the TKGI tile to the <%= vars.ops_manager %> Installation Dashboard.
  <img src="images/nsxt/nsxt-30/upgrade-05.png" alt="The <%= vars.ops_manager %> Installation Dashboard page after importing and applying the <%= vars.k8s_runtime_abbr %> tile.">

1. Click **Review Pending Changes**.

1. Expand the **Errands** dropdown and activate or deactivate **Upgrade all clusters errand**
  - See [Deciding Between Full and Two-Phase Upgrade](./understanding-upgrades.html#decide) to decide whether to upgrade <%= vars.k8s_runtime_abbr %>-provisioned Kubernetes clusters along with <%= vars.k8s_runtime_abbr %>, or upgrade them later.
  - <%= vars.recommended_by %> recommends that you upgrade Kubernetes clusters along with <%= vars.k8s_runtime_abbr %> if possible.
  - Activate the **Upgrade all clusters errand** to upgrade clusters along with <%= vars.k8s_runtime_abbr %>.
  <p class="note warning"><strong>Warning:</strong> Deactivating the <strong>Upgrade all clusters errand</strong>
  causes the <%= vars.k8s_runtime_abbr %> version tagged in your Kubernetes clusters to fall behind
  the <%= vars.k8s_runtime_abbr
 %> tile version.
  If you deactivate the <strong>Upgrade all clusters errand</strong>
  when upgrading the <%= vars.k8s_runtime_abbr
 %> tile,
  you must upgrade all your Kubernetes clusters before the next <%= vars.k8s_runtime_abbr %>
  upgrade.</p>

1. Set the **Run smoke tests** errand to **On**. 
The Smoke Test errand smoke tests the <%= vars.k8s_runtime_abbr %> upgrade 
by creating and deleting a test Kubernetes cluster. 
For more information, see [Errands](installing-nsx-t.html#errands) 
in _Installing <%= vars.product_short %> on vSphere with VMware NSX_.   

1. (Optional) Configure the Smoke Test errand to use a network profile instead of the default configuration settings on the <%= vars.k8s_runtime_abbr %> tile. 
For more information, see [Errands](installing-nsx-t.html#errands) 
in _Installing <%= vars.product_short %> on vSphere with VMware NSX_.  

### <a id="stemcell"></a>Download and Import Stemcells

<%= vars.k8s_runtime_abbr %> requires an Ubuntu Jammy Stemcell for VMware Tanzu.
A Windows 2019 Windows Stemcell for VMware Tanzu is also required if you intend to create Windows worker-based clusters.
For information about Windows stemcells, see
[Configuring Windows Worker-Based Clusters](windows-workers.html).

<p class="note warning"><strong>Warning:</strong> If you use an automated pipeline to upgrade <%= vars.k8s_runtime_abbr %>, 
see <a href="upgrade-pipeline.html#configure-pipeline">Configure Automated <%= vars.ops_manager %> and Ubuntu Jammy Stemcell for Tanzu Downloading</a> 
in <em>Configuring the Upgrade Pipeline</em>.  
</p> 

If <%= vars.ops_manager %> does not have the Ubuntu Jammy Stemcell for VMware Tanzu required for <%= vars.k8s_runtime_abbr %> <%= vars.product_version %>,
the <%= vars.k8s_runtime_abbr
 %> tile displays the message **Missing stemcell**.
To download and import a new Ubuntu Jammy Stemcell for VMware Tanzu, follow the steps below:

1. On the <%= vars.k8s_runtime_abbr
 %> tile, click the **Missing stemcell** link.

    <img src="images/missing_stemcell.png" alt="Verify stemcell assignment">

1. In the **Stemcell Library**, locate the **<%= vars.k8s_runtime_abbr
 %>** tile and note the required stemcell version.

1. Navigate to the [Stemcells (Ubuntu Jammy)](https://network.pivotal.io/products/stemcells-ubuntu-jammy/) page on <%= vars.product_network %>
and download the required Stemcell for VMware Tanzu version for your IaaS.

1. Return to the **Installation Dashboard** in <%= vars.ops_manager %> and click **Stemcell Library**.

1. On the **Stemcell Library** page, click **Import Stemcell** and select the stemcell file you downloaded from <%= vars.product_network %>.

1. Select the <%= vars.k8s_runtime_abbr
 %> tile and click **Apply Stemcell to Products**.

1. Verify that <%= vars.ops_manager %> successfully applied the stemcell. The stemcell version you imported and applied appears in the **Staged** column for <%= vars.k8s_runtime_abbr
 %>.

1. Return to the **Installation Dashboard**.

### <a id="upgrade-tkgi"></a>Upgrade the <%= vars.k8s_runtime_abbr %> Tile

To complete the upgrade of the <%= vars.k8s_runtime_abbr
 %> tile:

1. Return to the **Installation Dashboard** in <%= vars.ops_manager %>.

1. Click **Review Pending Changes**.
     For more information about this <%= vars.ops_manager %> page, see
    [Reviewing Pending Product Changes](https://docs.pivotal.io/ops-manager/install/review-pending-changes.html).

1. Click **Apply Changes.**
  <img src="images/nsxt/nsxt-30/upgrade-06.png" alt="The <%= vars.ops_manager %> Review Pending Changes page, with options to select which product updates to apply, and the Apply Changes button.">

1. (Optional) If you activated the **Upgrade all clusters errand**, you can use the BOSH CLI to monitor its progress:
      1. Log in to the BOSH Director by running `bosh -e MY-ENVIRONMENT log-in` from a VM that can access your <%= vars.k8s_runtime_abbr %> deployment. For more information, see [Using BOSH Diagnostic Commands in <%= vars.product_short %>](diagnostic-tools.html).
      1. Run `bosh -e MY-ENVIRONMENT tasks`.
      1. Locate the task number for the errand in the <strong>&#35;</strong> column of the BOSH output.
      1. Run `bosh task TASK-NUMBER`, replacing `TASK-NUMBER` with the task number you located in the previous step.

1. Verify that the TKGI tile shows the target version.
  <img src="images/nsxt/nsxt-30/upgrade-07.png"  alt="The <%= vars.ops_manager %> Installation Dashboard page after upgrading the <%= vars.k8s_runtime_abbr %> tile.">

## <a id="after-upgrade"></a>After the Upgrade

After you complete the upgrade to <%= vars.k8s_runtime_abbr %> <%= vars.product_version %>,
complete the following verifications and upgrades:

1. [Upgrade the <%= vars.k8s_runtime_abbr %> and Kubernetes CLIs](#upgrade-clis)
1. [Upgrade Kubernetes Clusters if Needed](#upgrade-k8s)
1. [Verify <%= vars.k8s_runtime_abbr %> Upgrade](#verify-upgrade)
1. [Upgrade NSX Data Center to NSX v3.2.3 or Later](#upgrade-nsxt)
1. [(Optional) Upgrade to vSphere 8](#upgrade-vsphere)


### <a id="upgrade-clis"></a>Upgrade the <%= vars.k8s_runtime_abbr %> and Kubernetes CLIs

Upgrade the <%= vars.k8s_runtime_abbr %> and Kubernetes CLIs on any local machine
where you run commands that interact with your upgraded version of <%= vars.k8s_runtime_abbr %>.

To upgrade the CLIs, download and re-install the <%= vars.k8s_runtime_abbr %> and Kubernetes CLI distributions
that are provided with <%= vars.k8s_runtime_abbr %> on <%= vars.product_network %>.

For more information about installing the CLIs, see the following topics:

* [Installing the <%= vars.k8s_runtime_abbr %> CLI](installing-cli.html)

* [Installing the Kubernetes CLI](installing-kubectl-cli.html)

###<a id='upgrade-k8s'></a>Upgrade Kubernetes Clusters If Needed

If you upgraded <%= vars.k8s_runtime_abbr %> with the **Upgrade all clusters errand** deactivated,
the next step is to upgrade the Kubernetes clusters individually using the TKGI CLI.

1. Log in to the <%= vars.k8s_runtime_abbr %> environment using the [TKGI CLI](./cli/index.html).

1. Run the command `tkgi clusters` to list all Kubernetes clusters with their current versions and status:

    ```
    TKGI Version     Name              k8s Version  Plan Name  UUID                                
    1.17.0  tkgi-cluster-1-small       1.26.5       small      0bea03c8-af47-48e8-b249-814c0bc407b9
    1.17.0  tkgi-cluster-2-medium      1.26.5       medium     5d9f4501-70cb-460b-9d78-0afbc074cb8c
    1.17.0  tkgi-cluster-3-large       1.26.5       large      b448117a-bb6f-49de-bc9b-452588bd44ef
    ```

1. Upgrade each cluster one-by-one using the command `tkgi upgrade-cluster CLUSTER-NAME`.
  - You do not have to wait for each upgrade to complete before upgrading the next one.
  - The advantage of running each upgrade separately is that it makes troubleshooting easier.
  BOSH assigns a unique task ID to each cluster upgrade.

1. When the cluster upgrades are complete, run the command `tkgi clusters` and verify that they list the target version:

    ```
    TKGI Version     Name              k8s Version  Plan Name  UUID                                  Status     Action
    1.18.0  tkgi-cluster-1-small       1.27.5       small      0bea03c8-af47-48e8-b249-814c0bc407b9  succeeded  UPGRADE
    1.18.0  tkgi-cluster-2-medium      1.27.5       medium     5d9f4501-70cb-460b-9d78-0afbc074cb8c  succeeded  UPGRADE
    1.18.0  tkgi-cluster-3-large       1.27.5       large      b448117a-bb6f-49de-bc9b-452588bd44ef  succeeded  UPGRADE
    ```

###<a id='verify'></a>Verify <%= vars.k8s_runtime_abbr %> Upgrade

1. To verify successful upgrade, create a test cluster:

    ```
    tkgi create-cluster tkgi-cluster-4-test --external-hostname tkgi-cluster-test --plan medium --num-nodes 3
    ```
    <p class="note"><strong>Note</strong>: Use only lowercase characters when naming your cluster 
    if you manage your clusters with Tanzu Mission Control (TMC). Clusters with names that include an uppercase character cannot be attached to TMC.
    </p>
1. Run `tkgi clusters` to verify that the new cluster is created with the appropriate version of TKGI and Kubernetes:

    ```
    $ tkgi clusters
    TKGI Version     Name              k8s Version  Plan Name  UUID                                  Status     Action
    1.18.0  tkgi-cluster-4-test        1.27.5       medium     5d9f4501-70cb-460b-9d78-0afbc074cb8c  succeeded  CREATE
    1.18.0  tkgi-cluster-1-small       1.27.5       small      0bea03c8-af47-48e8-b249-814c0bc407b9  succeeded  UPGRADE
    1.18.0  tkgi-cluster-2-medium      1.27.5       medium     5d9f4501-70cb-460b-9d78-0afbc074cb8c  succeeded  UPGRADE
    1.18.0  tkgi-cluster-3-large       1.27.5       large      b448117a-bb6f-49de-bc9b-452588bd44ef  succeeded  UPGRADE
    ```


##<a id='upgrade-vsphere'></a> (Optional) Upgrade to vSphere 8

After upgrading <%= vars.k8s_runtime_abbr %> and its Kubernetes clusters to <%= vars.product_version %>, you can upgrade vSphere to v8.
This upgrade includes upgrading the vCenter Server Appliance and each ESXi host, in that order.

1. Upgrade vCenter. Refer to [Upgrading the vCenter Server Appliance](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vcenter-upgrade/GUID-30485437-B107-42EC-A0A8-A03334CFC825.html) in the vCenter documentation.
1. Upgrade each ESXi host, one at a time.
  1. Put the ESXi host into maintenance mode.
  1. Upgrade the ESXi host. Refer to [Upgrading ESXi hosts](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-esxi-upgrade/GUID-122035F6-8433-463E-A0F7-B4FC71A05B04.html) in the vSphere documentation.
  1. Using the NSX Manager web interface for Transport Nodes, install the vSphere 8.0 VIBS onto the ESXi host.
  1. Using the NSX Manage web interface, verify that the ESXi host is in a "Success" state. If it is not, click the **Resolve** button.
  1. Remove the ESXi host from maintenance mode.
  1. Repeat the process for each ESXi host in your vCenter cluster that is part of your TKGI domain.

##<a id='troubleshoot'></a>Troubleshoot the Upgrade

See [Verifying Deployment Health](verify-health.html) for how to verify the health of your <%= vars.k8s_runtime_abbr %> environment
and gather information for troubleshooting cluster upgrades.

