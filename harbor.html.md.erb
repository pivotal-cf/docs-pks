---
title: Getting Started with VMware Harbor Registry
owner: PKS
---

This topic describes VMware Harbor Registry, an enterprise-class image registry
server that stores and distributes container images for <%= vars.product_full %>.

## <a id="overview"></a>Overview

Harbor allows you to store and manage container images for your <%= vars.product_short %>
deployment. Deploying an image registry alongside <%= vars.product_short %> improves
image transfer speed.

As an enterprise private registry, Harbor also offers enhanced performance and
improved security. By configuring Harbor with <%= vars.product_short %>, you can
apply enterprise features to your image registry, such as security, identity, and
management.

You can install Harbor alongside <%= vars.product_short %> on vSphere, Amazon
Web Services (AWS), Google Cloud Platform (GCP), and Microsoft Azure.

## <a id="installing"></a>Install Harbor

To install Harbor, do the following:

1. Install <%= vars.product_short %>. See the _Installing <%= vars.product_short %>_
topic for your cloud provider.
1. Install Harbor. See [Installing and Configuring VMware Harbor Registry](https://docs.pivotal.io/vmware-harbor/installing.html).

## <a id="using"></a>Use Harbor

Before you can push images to Harbor, you must do the following:

1. Configure authentication and role-based access control (RBAC) for Harbor.
See [Role Based Access Control (RBAC)](https://github.com/goharbor/harbor/blob/master/docs/user_guide.md#role-based-access-controlrbac) in the Harbor User Guide on GitHub.
1. Create a Harbor project that contains all repositories for your app. See [Managing projects](https://github.com/goharbor/harbor/blob/master/docs/user_guide.md#managing-projects) in the Harbor User Guide on GitHub.

After you configure Harbor, you can do the following:

- Push or pull Docker images to your Harbor project using the Docker command-line
interface (CLI). See [Pulling and pushing images using Docker client
](https://github.com/goharbor/harbor/blob/master/docs/user_guide.md#pulling-and-pushing-images-using-docker-client) in the Harbor User Guide on GitHub.
- Manage Helm charts in your Harbor project using either the Harbor portal or the
Helm CLI. See [Manage Helm Charts](https://github.com/goharbor/harbor/blob/master/docs/user_guide.md#manage-helm-charts) in the Harbor User Guide on GitHub.
- Install Clair to enable vulnerability scanning for images stored in Harbor.
See [Step 8: Configure Container Vulnerability Scanning Using Clair](https://docs.pivotal.io/vmware-harbor/installing.html#configure_clair)
in _Installing and Configuring VMware Harbor Registry_.

For more information about managing images in Harbor, see the [User Guide](https://github.com/goharbor/harbor/blob/master/docs/user_guide.md)
in the Harbor repository on GitHub.

## <a id="managing"></a>Manage Harbor

As a Harbor administrator, you can manage the following in the Harbor portal:

- **Authentication**: Select either local user authentication or configure
LDAP/Active Directory integration. If you select local user authentication,
you can enable or disable user self-registration.
- **Users and roles**: Manage privileges for Harbor users.
- **Email settings**: Configure a mail server for user password resets.
- **Project creation**: Specify which users can create projects.
- **Registry permissions**: Manage permissions for image registry access.
- **Endpoints**: Add and remove image registry endpoints.
- **Replication policies**: Add and remove rules for replication jobs.

For more information about managing Harbor as an administrator, see [Administrator options](https://github.com/goharbor/harbor/blob/master/docs/user_guide.md#administrator-options) in the Harbor User Guide on GitHub.
