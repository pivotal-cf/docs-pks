---
title: Debuggin VIX-8630
owner: TKGI
authenttype: pkstile
---


##<a id='register-pi-certificate'></a> Step 4 using tick marks

1. On the same Linux VM, run the following commands to register the principal identity with NSX-T Manager:

    ```
    $ pi_request=$(cat <<END  
      {  
        "display_name": "$PI_NAME",  
        "name": "$PI_NAME",  
             "role": "enterprise_admin",
             "certificate_pem": "$(awk 'NF {sub(/\r/, ""); printf "%s\\\\n",$0;}' ./"$NSX_SUPERUSER_CERT_FILE" )",
             "node_id": "$NODE_ID"
      }  
    END  
    )  
    ```

    ```
    $ curl -k -X POST \
        "https://${NSX_MANAGER}/api/v1/trust-management/principal-identities/with-certificate" \
      -u "$NSX_USER:$NSX_PASSWORD" \
      -H 'content-type: application/json' \
      -d "$pi_request"
    ```

##<a id='verify-pi-certificate'></a> Step 6 using tick marks

To verify that the certificate and key can be used with NSX-T, run the following command:

```
$ curl -k -X GET \
"https://${NSX_MANAGER}/api/v1/trust-management/principal-identities" \
--cert $(pwd)/"$NSX_SUPERUSER_CERT_FILE" \
--key $(pwd)/"$NSX_SUPERUSER_KEY_FILE"
```


##<a id='register-pi-certificate-pre'></a> Step 4: using pre tags

    <pre class="terminal">
    $ pi_request=$(cat  WITHOUT LESS THAN END  
      {  
        "display_name": "$PI_NAME",  
        "name": "$PI_NAME",  
             "role": "enterprise_admin",
             "certificate_pem": "$(awk 'NF {sub(/\r/, ""); printf "%s\\\\n",$0;}' ./"$NSX_SUPERUSER_CERT_FILE" )",
             "node_id": "$NODE_ID"
      }  
    END  
    )  
    </pre>

1. On the same Linux VM, run the following commands to register the principal identity with NSX-T Manager:  

    <pre class="terminal">
    $ pi_request=$(cat  WITHOUT LESS THAN END  
      {  
        "display_name": "$PI_NAME",  
        "name": "$PI_NAME",  
             "role": "enterprise_admin",
             "certificate_pem": "$(awk 'NF {sub(/\r/, ""); printf "%s\\\\n",$0;}' ./"$NSX_SUPERUSER_CERT_FILE" )",
             "node_id": "$NODE_ID"
      }  
    END  
    )  
    </pre>

    <pre class="terminal">
    $ pi_request=$(cat <<END  
      {  
        "display_name": "$PI_NAME",  
        "name": "$PI_NAME",  
             "role": "enterprise_admin",
             "certificate_pem": "$(awk 'NF {sub(/\r/, ""); printf "%s\\\\n",$0;}' ./"$NSX_SUPERUSER_CERT_FILE" )",
             "node_id": "$NODE_ID"
      }  
    END  
    )  
    </pre>

    <pre class="terminal">
    $ curl -k -X POST \
        "https://${NSX_MANAGER}/api/v1/trust-management/principal-identities/with-certificate" \
      -u "$NSX_USER:$NSX_PASSWORD" \
      -H 'content-type: application/json' \
      -d "$pi_request"
    </pre>

##<a id='verify-pi-certificate-pre'></a> Step 6 using pre tags

To verify that the certificate and key can be used with NSX-T, run the following command:

<pre class="terminal">
$ curl -k -X GET \
"https://${NSX_MANAGER}/api/v1/trust-management/principal-identities" \
--cert $(pwd)/"$NSX_SUPERUSER_CERT_FILE" \
--key $(pwd)/"$NSX_SUPERUSER_KEY_FILE"
</pre>