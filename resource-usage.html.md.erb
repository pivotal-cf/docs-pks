---
title: Managing Resource Usage with Quotas
owner: TKGI
---

<%= partial 'beta-component' %>

This topic describes how to restrict and review the usage of 
<%= vars.product_full %> resources by <%= vars.product_short %> users.

## <a id="overview"></a> Overview

As an <%= vars.product_short %> administrator,
you can set a limit on each user's total resource allocation
within <%= vars.product_short %>.

You manage resources in <%= vars.product_short %>
by defining quotas for individual users with the <%= vars.control_plane %>.

The `quotas` API endpoint allows you to restrict
the total amount of memory and number of CPUs
that a user can allocate in total across their deployed clusters.

In addition, you can limit the total number of clusters
a user can provision within <%= vars.product_short %>.

To review overall resource usage and for individual users,
you access the <%= vars.control_plane %> `usages` endpoint.

<p class="note"><strong>Note</strong>:
Quota settings affect only non-admin user accounts.
A quota applied to an admin user account is ignored.</p>

## <a id='quota-admin'></a> Set up Your API Access Token

The curl commands in this topic use an access token environment variable to 
authenticate into the <%= vars.control_plane %>.

<%= partial 'create-auth-token-var' %>

## <a id='quota-admin'></a> Manage Quotas

This section describes how to add, modify and delete user quotas.

### <a id='quota-add'></a> Add a Quota

To enforce a quota on a specific user, run the following command:

```
curl -k -X POST \
-H "Authorization: Bearer $YOUR-ACCESS-TOKEN" \
-H "Content-Type: application/json" \
-d \
'{
    "owner": "USER-ID",
    "limit": {
      "cpu": MAX-CPU,
      "memory": MAX-MEM,
      "cluster": MAX-CLUSTER
      }
    }' \
https://TKGI-API:9021/v1/quotas
```

Where:

* `YOUR-ACCESS-TOKEN` is your access token environment variable.
* `USER-ID` is the user account ID to enforce the quota restriction on.
* `MAX-CPU` is the maximum total amount of CPU resources that the user can allocate to containers and pods. If `MAX-CPU` is set to `0`, the user cannot create clusters.
* `MAX-MEM` is the maximum total amount of memory, in gigabytes, that the user can allocate to containers and pods. If `MAX-MEM` is set to `0`, the user cannot create clusters.
* `MAX-CLUSTER` is the maximum number of clusters that the user can provision. This value must greater than or equal to `1`.
* `TKGI-API` is the FQDN of your <%= vars.control_plane %> server. 

For example:
<pre class="terminal">
$ user=exampleuser<br>
$ tkgi login -a tkgi.my.lab -u $user -p 'psswrdabc123...!' -k; export TOKEN=$(bosh int ~/.pks/creds.yml --path /access_token)<br>
$ curl -k -X POST \<br>
-H "Authorization: Bearer $TOKEN" \<br>
-H "Content-Type: application/json" \<br>
-d \<br>
'{<br>
    "owner": "cody",<br>
    "limit": {<br>
        "cpu": 4,<br>
        "memory": 5,<br>
        "cluster": 10<br>
    }<br>
  }' \<br>
https&#58;//example.com&#58;9021/v1/quotas<br>
</pre>

### <a id='quota-modify'></a> Modify an Existing Quota

To modify a specific user's existing quota, run the following command:

```
curl -k -X PATCH  \ 
-H "Authorization: Bearer $YOUR-ACCESS-TOKEN" \
-H "Content-Type: application/json" \
-d \
'{ 
    "owner": "USER-ID", 
    "limit": { 
      "cpu": MAX-CPU, 
      "memory": MAX-MEM,
      "cluster": MAX-CLUSTER    
      } 
    }' \
https://TKGI-API:9021/v1/quotas/USER-ID
```

Where:

* `YOUR-ACCESS-TOKEN` is your access token environment variable.
* `USER-ID` is the user account ID to enforce the quota restriction on.
* `MAX-CPU` is the maximum total amount of CPU resources that the user can allocate to containers and pods. If `MAX-CPU` is set to `0`, the user cannot create clusters.
* `MAX-MEM` is the maximum total amount of memory, in gigabytes, that the user can allocate to containers and pods. If `MAX-MEM` is set to `0`, the user cannot create clusters.
* `MAX-CLUSTER` is the maximum number of clusters that the user can provision. This value must greater than or equal to `1`.
* `TKGI-API` is the FQDN of your <%= vars.control_plane %> server. For example, `api.tkgi.example.com`.

For example:
<pre class="terminal">
$ user=exampleuser<br>
$ tkgi login -a tkgi.my.lab -u $user -p 'psswrdabc123...!' -k; export TOKEN=$(bosh int ~/.pks/creds.yml --path /access_token)<br>
$ curl -k -X PATCH \<br>
-H "Authorization: Bearer $TOKEN" \<br>
-H "Content-Type: application/json" \<br>
-d \<br>
'{ <br>
    "owner": "cody", <br>
    "limit": { <br>
        "cpu": 2, <br>
        "memory": 3,<br>
        "cluster": 6<br>
    }<br>
  }' \<br>
https&#58;//example.com&#58;9021/v1/quotas/$user<br>
</pre>

### <a id='quota-delete'></a> Delete a Quota

To delete a specific user's existing quota, run the following command:

```
curl -k -X DELETE -H "Authorization: Bearer $YOUR-ACCESS-TOKEN" \
https://TKGI-API:9021/v1/quotas/USER-ID
```

Where:

* `YOUR-ACCESS-TOKEN` is your access token environment variable.
* `TKGI-API` is the FQDN of your <%= vars.control_plane %> server.
* `USER-ID` is the user account ID to enforce the quota restriction on.

For example:
<pre class="terminal">
$ user=exampleuser<br>
$ tkgi login -a tkgi.my.lab -u $user -p 'psswrdabc123...!' -k; export TOKEN=$(bosh int ~/.pks/creds.yml --path /access_token)<br>
$ curl -k -X DELETE -H "Authorization: Bearer $TOKEN" \<br>
https&#58;//example.com&#58;9021/v1/quotas/$user<br>
{<br>
  "body":"The quota owner named: \"exampleuser\" not found."<br>
}<br>
</pre>

## <a id='quota-view-admin'></a> View Quotas

The <%= vars.control_plane %> `quotas` endpoint reports on resource usage quotas in the JSON format.

### <a id='view-quotas-by-user'></a> View Quotas for a Single User

To list the resource quota restrictions currently applied to a single user, run the following command:

```
curl -k -H "Authorization: Bearer $YOUR-ACCESS-TOKEN" \
https://TKGI-API:9021/v1/quotas/USER-ID
```

Where:

* `YOUR-ACCESS-TOKEN` is your access token environment variable.
* `TKGI-API` is the FQDN of your <%= vars.control_plane %> server.
* `USER-ID` is the user account ID to report on.  

For example:
<pre class="terminal">
$ user=exampleuser<br>
$ tkgi login -a tkgi.my.lab -u $user -p 'psswrdabc123...!' -k; export TOKEN=$(bosh int ~/.pks/creds.yml --path /access_token)<br>
$ curl -k -H "Authorization: Bearer $TOKEN" \<br>
https&#58;//example.com&#58;9021/v1/quotas/$user <br>
{<br>
  "owner":"cody",<br>
  "limit":{<br>
      "cpu":2,<br>
      "memory":1.0,<br>
      "cluster": 6<br>
  }<br>
}<br>
</pre>

### <a id='view-quotas-by-user'></a> View All Quotas

To list all current resource and cluster quota restrictions, run the following command:

```
curl -k -H "Authorization: Bearer $YOUR-ACCESS-TOKEN" \
https://TKGI-API:9021/v1/quotas
```

Where:

* `YOUR-ACCESS-TOKEN` is your access token environment variable.
* `TKGI-API` is the FQDN of your <%= vars.control_plane %> server.

For example:
<pre class="terminal">
$ user=exampleuser<br>
$ tkgi login -a tkgi.my.lab -u $user -p 'psswrdabc123...!' -k; export TOKEN=$(bosh int ~/.pks/creds.yml --path /access_token)<br>
$ curl -k -H "Authorization: Bearer $TOKEN" \<br>
https&#58;//example.com&#58;9021/v1/quotas<br>
[<br>
  {<br>
    "owner":"cody",<br>
    "limit":{<br>
        "cpu":2,<br>
        "memory":1.0,<br>
        "cluster": 6<br>
    }<br>
  }<br>
]<br>
</pre>

## <a id="error"></a> Error Message When User Exceeds Cluster Quota

If a user has exceeded their set cluster creation quota, then 
the following error message 
appears when the user attempts to create a cluster.

<pre class="terminal">
Error: You do not have enough privileges to perform this action. <br>
Please contact the <%= vars.k8s_runtime_abbr %> administrator.<br>
</pre>

## <a id='usage-view-admin'></a> View Usage

The <%= vars.control_plane %> `usages` endpoint returns resource usage per user in the JSON format.

### <a id='view-single-user'></a> View Resource Usage by User

To list the current resource usage of a single user, run the following command:

```
curl -k -H "Authorization: Bearer $YOUR-ACCESS-TOKEN" https://TKGI-API:9021/v1/usages/USER-ID
```

Where:

* `YOUR-ACCESS-TOKEN` is your access token environment variable.
* `TKGI-API` is the FQDN of your <%= vars.control_plane %> server.
* `USER-ID` is the user account ID whose resource utilization you want to view.  

### <a id='view-all-usage'></a> View All Resource Usage

To list the current resource utilization for all users and clusters, run the following command:

```
curl -k -H "Authorization: Bearer $YOUR-ACCESS-TOKEN" \
https://TKGI-API:9021/v1/usages
```

Where:

* `YOUR-ACCESS-TOKEN` is your access token environment variable.
* `TKGI-API` is the FQDN of your <%= vars.control_plane %> server.

For example:
<pre class="terminal">
$ user=exampleuser<br>
$ tkgi login -a tkgi.my.lab -u $user -p 'psswrdabc123...!' -k; export TOKEN=$(bosh int ~/.pks/creds.yml --path /access_token)<br>
$ curl -k -H "Authorization: Bearer $TOKEN" \<br>
https&#58;//example.com&#58;9021/v1/usages<br>
[<br>
  {<br>
    "owner": "cody",<br>
    "totals": {<br>
      "cpu": 20,<br>
      "memory": 52,<br>
      "cluster": 2<br>
    },<br>
    "clusters": [<br>
      {<br>
        "name": "vsp1",<br>
        "cpu": 12,<br>
        "memory": 36<br>
      }<br>
    ]<br>
  }<br>
]<br>
</pre>
