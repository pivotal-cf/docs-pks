---
title: Retrieving Cluster Credentials and Configuration
owner: TKGI
---

This topic describes how to use the `tkgi get-credentials` command in <%= vars.product_full %> using the <%= vars.k8s_runtime_abbr %> Command Line Interface (<%= vars.k8s_runtime_abbr %> CLI).

The `tkgi get-credentials` command performs the following actions:

  - Fetch the cluster's kubeconfig
  - Add the cluster's kubeconfig to the existing kubeconfig
  - Create a new kubeconfig, if none exists
  - Switch the context to the `CLUSTER-NAME` provided

When you run `tkgi get-credentials CLUSTER-NAME`, <%= vars.k8s_runtime_abbr %> sets the context to the cluster you provide as the `CLUSTER-NAME`.
<%= vars.k8s_runtime_abbr %> binds your username to the cluster and populates the kubeconfig file on your local workstation with cluster credentials and configuration.

The default path for your kubeconfig is `$HOME/.kube/config`.

If you access multiple clusters, you can choose to use a custom kubeconfig file for each cluster.
To save cluster credentials to a custom kubeconfig, use the `KUBECONFIG` environment variable when you run `tkgi get-credentials`.
For example:
<pre class="terminal">$ KUBECONFIG=/path/to/my-cluster.config tkgi get-credentials my-cluster</pre>

##<a id='get-credentials'></a> Retrieve Cluster Credentials

Perform the following steps to populate your local kubeconfig with cluster credentials and configuration:

1. <%= partial 'login-api' %>

1. Run the following command:
  <pre>
  tkgi get-credentials CLUSTER-NAME
  </pre>
  Where `CLUSTER-NAME` is the unique name for your cluster.
     
    For example: 

    <pre class="terminal">$ tkgi get-credentials tkgi-example-cluster

    Fetching credentials for cluster tkgi-example-cluster.
    Context set for cluster tkgi-example-cluster.

    You can now switch between clusters by using:
    $kubectl config use-context &ltcluster-name&gt
    </pre>
  <p class="note"><strong>Note</strong>: If you enable OpenID Connect (OIDC) in the <%= vars.product_tile %> tile, 
    <%= vars.k8s_runtime_abbr %> requires your password to run the <code>tkgi get-credentials CLUSTER-NAME</code> command. 
    This allows <%= vars.k8s_runtime_abbr %> to retrieve valid tokens for the kubeconfig file. You can provide your password at the prompt 
    or as the <code><%= vars.k8s_runtime_abbr %>&#95;USER&#95;PASSWORD</code> environment variable. For more information, see the 
    <em>Configure OpenID Connect</em> section of <a href="installing.html">Installing <%= vars.product_short %></a> 
  for your IaaS.</p>
  
    <%= partial "saml-sso-login" %>

##<a id='kubectl'></a> Run kubectl Commands

After <%= vars.k8s_runtime_abbr %> populates your kubeconfig, you can use the Kubernetes Command Line Interface (kubectl) to run commands against your Kubernetes clusters.

See [Installing the Kubernetes CLI](installing-kubectl-cli.html) for information about installing kubectl.

For information about using kubectl, refer to the [Kubernetes documentation](https://kubernetes.io/docs/user-guide/kubectl-overview/).
